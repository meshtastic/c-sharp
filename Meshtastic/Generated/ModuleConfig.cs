// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: meshtastic/module_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Meshtastic.Protobufs {

  /// <summary>Holder for reflection information generated from meshtastic/module_config.proto</summary>
  public static partial class ModuleConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for meshtastic/module_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModuleConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5tZXNodGFzdGljL21vZHVsZV9jb25maWcucHJvdG8SCm1lc2h0YXN0aWMi",
            "5x4KDE1vZHVsZUNvbmZpZxIzCgRtcXR0GAEgASgLMiMubWVzaHRhc3RpYy5N",
            "b2R1bGVDb25maWcuTVFUVENvbmZpZ0gAEjcKBnNlcmlhbBgCIAEoCzIlLm1l",
            "c2h0YXN0aWMuTW9kdWxlQ29uZmlnLlNlcmlhbENvbmZpZ0gAElQKFWV4dGVy",
            "bmFsX25vdGlmaWNhdGlvbhgDIAEoCzIzLm1lc2h0YXN0aWMuTW9kdWxlQ29u",
            "ZmlnLkV4dGVybmFsTm90aWZpY2F0aW9uQ29uZmlnSAASRAoNc3RvcmVfZm9y",
            "d2FyZBgEIAEoCzIrLm1lc2h0YXN0aWMuTW9kdWxlQ29uZmlnLlN0b3JlRm9y",
            "d2FyZENvbmZpZ0gAEj4KCnJhbmdlX3Rlc3QYBSABKAsyKC5tZXNodGFzdGlj",
            "Lk1vZHVsZUNvbmZpZy5SYW5nZVRlc3RDb25maWdIABI9Cgl0ZWxlbWV0cnkY",
            "BiABKAsyKC5tZXNodGFzdGljLk1vZHVsZUNvbmZpZy5UZWxlbWV0cnlDb25m",
            "aWdIABJGCg5jYW5uZWRfbWVzc2FnZRgHIAEoCzIsLm1lc2h0YXN0aWMuTW9k",
            "dWxlQ29uZmlnLkNhbm5lZE1lc3NhZ2VDb25maWdIABI1CgVhdWRpbxgIIAEo",
            "CzIkLm1lc2h0YXN0aWMuTW9kdWxlQ29uZmlnLkF1ZGlvQ29uZmlnSAASSAoP",
            "cmVtb3RlX2hhcmR3YXJlGAkgASgLMi0ubWVzaHRhc3RpYy5Nb2R1bGVDb25m",
            "aWcuUmVtb3RlSGFyZHdhcmVDb25maWdIABJECg1uZWlnaGJvcl9pbmZvGAog",
            "ASgLMisubWVzaHRhc3RpYy5Nb2R1bGVDb25maWcuTmVpZ2hib3JJbmZvQ29u",
            "ZmlnSAASSgoQYW1iaWVudF9saWdodGluZxgLIAEoCzIuLm1lc2h0YXN0aWMu",
            "TW9kdWxlQ29uZmlnLkFtYmllbnRMaWdodGluZ0NvbmZpZ0gAEkoKEGRldGVj",
            "dGlvbl9zZW5zb3IYDCABKAsyLi5tZXNodGFzdGljLk1vZHVsZUNvbmZpZy5E",
            "ZXRlY3Rpb25TZW5zb3JDb25maWdIABrIAQoKTVFUVENvbmZpZxIPCgdlbmFi",
            "bGVkGAEgASgIEg8KB2FkZHJlc3MYAiABKAkSEAoIdXNlcm5hbWUYAyABKAkS",
            "EAoIcGFzc3dvcmQYBCABKAkSGgoSZW5jcnlwdGlvbl9lbmFibGVkGAUgASgI",
            "EhQKDGpzb25fZW5hYmxlZBgGIAEoCBITCgt0bHNfZW5hYmxlZBgHIAEoCBIM",
            "CgRyb290GAggASgJEh8KF3Byb3h5X3RvX2NsaWVudF9lbmFibGVkGAkgASgI",
            "GoIBChRSZW1vdGVIYXJkd2FyZUNvbmZpZxIPCgdlbmFibGVkGAEgASgIEiIK",
            "GmFsbG93X3VuZGVmaW5lZF9waW5fYWNjZXNzGAIgASgIEjUKDmF2YWlsYWJs",
            "ZV9waW5zGAMgAygLMh0ubWVzaHRhc3RpYy5SZW1vdGVIYXJkd2FyZVBpbho+",
            "ChJOZWlnaGJvckluZm9Db25maWcSDwoHZW5hYmxlZBgBIAEoCBIXCg91cGRh",
            "dGVfaW50ZXJ2YWwYAiABKA0a0gEKFURldGVjdGlvblNlbnNvckNvbmZpZxIP",
            "CgdlbmFibGVkGAEgASgIEh4KFm1pbmltdW1fYnJvYWRjYXN0X3NlY3MYAiAB",
            "KA0SHAoUc3RhdGVfYnJvYWRjYXN0X3NlY3MYAyABKA0SEQoJc2VuZF9iZWxs",
            "GAQgASgIEgwKBG5hbWUYBSABKAkSEwoLbW9uaXRvcl9waW4YBiABKA0SIAoY",
            "ZGV0ZWN0aW9uX3RyaWdnZXJlZF9oaWdoGAcgASgIEhIKCnVzZV9wdWxsdXAY",
            "CCABKAga5AIKC0F1ZGlvQ29uZmlnEhYKDmNvZGVjMl9lbmFibGVkGAEgASgI",
            "Eg8KB3B0dF9waW4YAiABKA0SQAoHYml0cmF0ZRgDIAEoDjIvLm1lc2h0YXN0",
            "aWMuTW9kdWxlQ29uZmlnLkF1ZGlvQ29uZmlnLkF1ZGlvX0JhdWQSDgoGaTJz",
            "X3dzGAQgASgNEg4KBmkyc19zZBgFIAEoDRIPCgdpMnNfZGluGAYgASgNEg8K",
            "B2kyc19zY2sYByABKA0ipwEKCkF1ZGlvX0JhdWQSEgoOQ09ERUMyX0RFRkFV",
            "TFQQABIPCgtDT0RFQzJfMzIwMBABEg8KC0NPREVDMl8yNDAwEAISDwoLQ09E",
            "RUMyXzE2MDAQAxIPCgtDT0RFQzJfMTQwMBAEEg8KC0NPREVDMl8xMzAwEAUS",
            "DwoLQ09ERUMyXzEyMDAQBhIOCgpDT0RFQzJfNzAwEAcSDwoLQ09ERUMyXzcw",
            "MEIQCBrkBAoMU2VyaWFsQ29uZmlnEg8KB2VuYWJsZWQYASABKAgSDAoEZWNo",
            "bxgCIAEoCBILCgNyeGQYAyABKA0SCwoDdHhkGAQgASgNEj8KBGJhdWQYBSAB",
            "KA4yMS5tZXNodGFzdGljLk1vZHVsZUNvbmZpZy5TZXJpYWxDb25maWcuU2Vy",
            "aWFsX0JhdWQSDwoHdGltZW91dBgGIAEoDRI/CgRtb2RlGAcgASgOMjEubWVz",
            "aHRhc3RpYy5Nb2R1bGVDb25maWcuU2VyaWFsQ29uZmlnLlNlcmlhbF9Nb2Rl",
            "EiQKHG92ZXJyaWRlX2NvbnNvbGVfc2VyaWFsX3BvcnQYCCABKAgiigIKC1Nl",
            "cmlhbF9CYXVkEhAKDEJBVURfREVGQVVMVBAAEgwKCEJBVURfMTEwEAESDAoI",
            "QkFVRF8zMDAQAhIMCghCQVVEXzYwMBADEg0KCUJBVURfMTIwMBAEEg0KCUJB",
            "VURfMjQwMBAFEg0KCUJBVURfNDgwMBAGEg0KCUJBVURfOTYwMBAHEg4KCkJB",
            "VURfMTkyMDAQCBIOCgpCQVVEXzM4NDAwEAkSDgoKQkFVRF81NzYwMBAKEg8K",
            "C0JBVURfMTE1MjAwEAsSDwoLQkFVRF8yMzA0MDAQDBIPCgtCQVVEXzQ2MDgw",
            "MBANEg8KC0JBVURfNTc2MDAwEA4SDwoLQkFVRF85MjE2MDAQDyJVCgtTZXJp",
            "YWxfTW9kZRILCgdERUZBVUxUEAASCgoGU0lNUExFEAESCQoFUFJPVE8QAhIL",
            "CgdURVhUTVNHEAMSCAoETk1FQRAEEgsKB0NBTFRPUE8QBRrOAgoaRXh0ZXJu",
            "YWxOb3RpZmljYXRpb25Db25maWcSDwoHZW5hYmxlZBgBIAEoCBIRCglvdXRw",
            "dXRfbXMYAiABKA0SDgoGb3V0cHV0GAMgASgNEhQKDG91dHB1dF92aWJyYRgI",
            "IAEoDRIVCg1vdXRwdXRfYnV6emVyGAkgASgNEg4KBmFjdGl2ZRgEIAEoCBIV",
            "Cg1hbGVydF9tZXNzYWdlGAUgASgIEhsKE2FsZXJ0X21lc3NhZ2VfdmlicmEY",
            "CiABKAgSHAoUYWxlcnRfbWVzc2FnZV9idXp6ZXIYCyABKAgSEgoKYWxlcnRf",
            "YmVsbBgGIAEoCBIYChBhbGVydF9iZWxsX3ZpYnJhGAwgASgIEhkKEWFsZXJ0",
            "X2JlbGxfYnV6emVyGA0gASgIEg8KB3VzZV9wd20YByABKAgSEwoLbmFnX3Rp",
            "bWVvdXQYDiABKA0ahAEKElN0b3JlRm9yd2FyZENvbmZpZxIPCgdlbmFibGVk",
            "GAEgASgIEhEKCWhlYXJ0YmVhdBgCIAEoCBIPCgdyZWNvcmRzGAMgASgNEhoK",
            "Emhpc3RvcnlfcmV0dXJuX21heBgEIAEoDRIdChVoaXN0b3J5X3JldHVybl93",
            "aW5kb3cYBSABKA0aQAoPUmFuZ2VUZXN0Q29uZmlnEg8KB2VuYWJsZWQYASAB",
            "KAgSDgoGc2VuZGVyGAIgASgNEgwKBHNhdmUYAyABKAgahgIKD1RlbGVtZXRy",
            "eUNvbmZpZxIeChZkZXZpY2VfdXBkYXRlX2ludGVydmFsGAEgASgNEiMKG2Vu",
            "dmlyb25tZW50X3VwZGF0ZV9pbnRlcnZhbBgCIAEoDRInCh9lbnZpcm9ubWVu",
            "dF9tZWFzdXJlbWVudF9lbmFibGVkGAMgASgIEiIKGmVudmlyb25tZW50X3Nj",
            "cmVlbl9lbmFibGVkGAQgASgIEiYKHmVudmlyb25tZW50X2Rpc3BsYXlfZmFo",
            "cmVuaGVpdBgFIAEoCBIbChNhaXJfcXVhbGl0eV9lbmFibGVkGAYgASgIEhwK",
            "FGFpcl9xdWFsaXR5X2ludGVydmFsGAcgASgNGtYEChNDYW5uZWRNZXNzYWdl",
            "Q29uZmlnEhcKD3JvdGFyeTFfZW5hYmxlZBgBIAEoCBIZChFpbnB1dGJyb2tl",
            "cl9waW5fYRgCIAEoDRIZChFpbnB1dGJyb2tlcl9waW5fYhgDIAEoDRIdChVp",
            "bnB1dGJyb2tlcl9waW5fcHJlc3MYBCABKA0SWQoUaW5wdXRicm9rZXJfZXZl",
            "bnRfY3cYBSABKA4yOy5tZXNodGFzdGljLk1vZHVsZUNvbmZpZy5DYW5uZWRN",
            "ZXNzYWdlQ29uZmlnLklucHV0RXZlbnRDaGFyEloKFWlucHV0YnJva2VyX2V2",
            "ZW50X2NjdxgGIAEoDjI7Lm1lc2h0YXN0aWMuTW9kdWxlQ29uZmlnLkNhbm5l",
            "ZE1lc3NhZ2VDb25maWcuSW5wdXRFdmVudENoYXISXAoXaW5wdXRicm9rZXJf",
            "ZXZlbnRfcHJlc3MYByABKA4yOy5tZXNodGFzdGljLk1vZHVsZUNvbmZpZy5D",
            "YW5uZWRNZXNzYWdlQ29uZmlnLklucHV0RXZlbnRDaGFyEhcKD3VwZG93bjFf",
            "ZW5hYmxlZBgIIAEoCBIPCgdlbmFibGVkGAkgASgIEhoKEmFsbG93X2lucHV0",
            "X3NvdXJjZRgKIAEoCRIRCglzZW5kX2JlbGwYCyABKAgiYwoOSW5wdXRFdmVu",
            "dENoYXISCAoETk9ORRAAEgYKAlVQEBESCAoERE9XThASEggKBExFRlQQExIJ",
            "CgVSSUdIVBAUEgoKBlNFTEVDVBAKEggKBEJBQ0sQGxIKCgZDQU5DRUwQGBpl",
            "ChVBbWJpZW50TGlnaHRpbmdDb25maWcSEQoJbGVkX3N0YXRlGAEgASgIEg8K",
            "B2N1cnJlbnQYAiABKA0SCwoDcmVkGAMgASgNEg0KBWdyZWVuGAQgASgNEgwK",
            "BGJsdWUYBSABKA1CEQoPcGF5bG9hZF92YXJpYW50ImQKEVJlbW90ZUhhcmR3",
            "YXJlUGluEhAKCGdwaW9fcGluGAEgASgNEgwKBG5hbWUYAiABKAkSLwoEdHlw",
            "ZRgDIAEoDjIhLm1lc2h0YXN0aWMuUmVtb3RlSGFyZHdhcmVQaW5UeXBlKkkK",
            "FVJlbW90ZUhhcmR3YXJlUGluVHlwZRILCgdVTktOT1dOEAASEAoMRElHSVRB",
            "TF9SRUFEEAESEQoNRElHSVRBTF9XUklURRACQmcKE2NvbS5nZWVrc3ZpbGxl",
            "Lm1lc2hCEk1vZHVsZUNvbmZpZ1Byb3Rvc1oiZ2l0aHViLmNvbS9tZXNodGFz",
            "dGljL2dvL2dlbmVyYXRlZKoCFE1lc2h0YXN0aWMuUHJvdG9idWZzugIAYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Meshtastic.Protobufs.RemoteHardwarePinType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig), global::Meshtastic.Protobufs.ModuleConfig.Parser, new[]{ "Mqtt", "Serial", "ExternalNotification", "StoreForward", "RangeTest", "Telemetry", "CannedMessage", "Audio", "RemoteHardware", "NeighborInfo", "AmbientLighting", "DetectionSensor" }, new[]{ "PayloadVariant" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig.Parser, new[]{ "Enabled", "Address", "Username", "Password", "EncryptionEnabled", "JsonEnabled", "TlsEnabled", "Root", "ProxyToClientEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig.Parser, new[]{ "Enabled", "AllowUndefinedPinAccess", "AvailablePins" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig.Parser, new[]{ "Enabled", "UpdateInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig.Parser, new[]{ "Enabled", "MinimumBroadcastSecs", "StateBroadcastSecs", "SendBell", "Name", "MonitorPin", "DetectionTriggeredHigh", "UsePullup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Parser, new[]{ "Codec2Enabled", "PttPin", "Bitrate", "I2SWs", "I2SSd", "I2SDin", "I2SSck" }, null, new[]{ typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Parser, new[]{ "Enabled", "Echo", "Rxd", "Txd", "Baud", "Timeout", "Mode", "OverrideConsoleSerialPort" }, null, new[]{ typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud), typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig.Parser, new[]{ "Enabled", "OutputMs", "Output", "OutputVibra", "OutputBuzzer", "Active", "AlertMessage", "AlertMessageVibra", "AlertMessageBuzzer", "AlertBell", "AlertBellVibra", "AlertBellBuzzer", "UsePwm", "NagTimeout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig.Parser, new[]{ "Enabled", "Heartbeat", "Records", "HistoryReturnMax", "HistoryReturnWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig.Parser, new[]{ "Enabled", "Sender", "Save" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig.Parser, new[]{ "DeviceUpdateInterval", "EnvironmentUpdateInterval", "EnvironmentMeasurementEnabled", "EnvironmentScreenEnabled", "EnvironmentDisplayFahrenheit", "AirQualityEnabled", "AirQualityInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Parser, new[]{ "Rotary1Enabled", "InputbrokerPinA", "InputbrokerPinB", "InputbrokerPinPress", "InputbrokerEventCw", "InputbrokerEventCcw", "InputbrokerEventPress", "Updown1Enabled", "Enabled", "AllowInputSource", "SendBell" }, null, new[]{ typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig), global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig.Parser, new[]{ "LedState", "Current", "Red", "Green", "Blue" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.RemoteHardwarePin), global::Meshtastic.Protobufs.RemoteHardwarePin.Parser, new[]{ "GpioPin", "Name", "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RemoteHardwarePinType {
    /// <summary>
    ///
    /// Unset/unused
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    ///
    /// GPIO pin can be read (if it is high / low)
    /// </summary>
    [pbr::OriginalName("DIGITAL_READ")] DigitalRead = 1,
    /// <summary>
    ///
    /// GPIO pin can be written to (high / low)
    /// </summary>
    [pbr::OriginalName("DIGITAL_WRITE")] DigitalWrite = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///
  /// Module Config
  /// </summary>
  public sealed partial class ModuleConfig : pb::IMessage<ModuleConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModuleConfig> _parser = new pb::MessageParser<ModuleConfig>(() => new ModuleConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ModuleConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.ModuleConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModuleConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModuleConfig(ModuleConfig other) : this() {
      switch (other.PayloadVariantCase) {
        case PayloadVariantOneofCase.Mqtt:
          Mqtt = other.Mqtt.Clone();
          break;
        case PayloadVariantOneofCase.Serial:
          Serial = other.Serial.Clone();
          break;
        case PayloadVariantOneofCase.ExternalNotification:
          ExternalNotification = other.ExternalNotification.Clone();
          break;
        case PayloadVariantOneofCase.StoreForward:
          StoreForward = other.StoreForward.Clone();
          break;
        case PayloadVariantOneofCase.RangeTest:
          RangeTest = other.RangeTest.Clone();
          break;
        case PayloadVariantOneofCase.Telemetry:
          Telemetry = other.Telemetry.Clone();
          break;
        case PayloadVariantOneofCase.CannedMessage:
          CannedMessage = other.CannedMessage.Clone();
          break;
        case PayloadVariantOneofCase.Audio:
          Audio = other.Audio.Clone();
          break;
        case PayloadVariantOneofCase.RemoteHardware:
          RemoteHardware = other.RemoteHardware.Clone();
          break;
        case PayloadVariantOneofCase.NeighborInfo:
          NeighborInfo = other.NeighborInfo.Clone();
          break;
        case PayloadVariantOneofCase.AmbientLighting:
          AmbientLighting = other.AmbientLighting.Clone();
          break;
        case PayloadVariantOneofCase.DetectionSensor:
          DetectionSensor = other.DetectionSensor.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModuleConfig Clone() {
      return new ModuleConfig(this);
    }

    /// <summary>Field number for the "mqtt" field.</summary>
    public const int MqttFieldNumber = 1;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig Mqtt {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.Mqtt ? (global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.Mqtt;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 2;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig Serial {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.Serial ? (global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.Serial;
      }
    }

    /// <summary>Field number for the "external_notification" field.</summary>
    public const int ExternalNotificationFieldNumber = 3;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig ExternalNotification {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.ExternalNotification ? (global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.ExternalNotification;
      }
    }

    /// <summary>Field number for the "store_forward" field.</summary>
    public const int StoreForwardFieldNumber = 4;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig StoreForward {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.StoreForward ? (global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.StoreForward;
      }
    }

    /// <summary>Field number for the "range_test" field.</summary>
    public const int RangeTestFieldNumber = 5;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig RangeTest {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.RangeTest ? (global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.RangeTest;
      }
    }

    /// <summary>Field number for the "telemetry" field.</summary>
    public const int TelemetryFieldNumber = 6;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig Telemetry {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.Telemetry ? (global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.Telemetry;
      }
    }

    /// <summary>Field number for the "canned_message" field.</summary>
    public const int CannedMessageFieldNumber = 7;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig CannedMessage {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.CannedMessage ? (global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.CannedMessage;
      }
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 8;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig Audio {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.Audio ? (global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.Audio;
      }
    }

    /// <summary>Field number for the "remote_hardware" field.</summary>
    public const int RemoteHardwareFieldNumber = 9;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig RemoteHardware {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.RemoteHardware ? (global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.RemoteHardware;
      }
    }

    /// <summary>Field number for the "neighbor_info" field.</summary>
    public const int NeighborInfoFieldNumber = 10;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig NeighborInfo {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.NeighborInfo ? (global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.NeighborInfo;
      }
    }

    /// <summary>Field number for the "ambient_lighting" field.</summary>
    public const int AmbientLightingFieldNumber = 11;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig AmbientLighting {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.AmbientLighting ? (global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.AmbientLighting;
      }
    }

    /// <summary>Field number for the "detection_sensor" field.</summary>
    public const int DetectionSensorFieldNumber = 12;
    /// <summary>
    ///
    /// TODO: REPLACE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig DetectionSensor {
      get { return payloadVariantCase_ == PayloadVariantOneofCase.DetectionSensor ? (global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig) payloadVariant_ : null; }
      set {
        payloadVariant_ = value;
        payloadVariantCase_ = value == null ? PayloadVariantOneofCase.None : PayloadVariantOneofCase.DetectionSensor;
      }
    }

    private object payloadVariant_;
    /// <summary>Enum of possible cases for the "payload_variant" oneof.</summary>
    public enum PayloadVariantOneofCase {
      None = 0,
      Mqtt = 1,
      Serial = 2,
      ExternalNotification = 3,
      StoreForward = 4,
      RangeTest = 5,
      Telemetry = 6,
      CannedMessage = 7,
      Audio = 8,
      RemoteHardware = 9,
      NeighborInfo = 10,
      AmbientLighting = 11,
      DetectionSensor = 12,
    }
    private PayloadVariantOneofCase payloadVariantCase_ = PayloadVariantOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadVariantOneofCase PayloadVariantCase {
      get { return payloadVariantCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayloadVariant() {
      payloadVariantCase_ = PayloadVariantOneofCase.None;
      payloadVariant_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ModuleConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ModuleConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Mqtt, other.Mqtt)) return false;
      if (!object.Equals(Serial, other.Serial)) return false;
      if (!object.Equals(ExternalNotification, other.ExternalNotification)) return false;
      if (!object.Equals(StoreForward, other.StoreForward)) return false;
      if (!object.Equals(RangeTest, other.RangeTest)) return false;
      if (!object.Equals(Telemetry, other.Telemetry)) return false;
      if (!object.Equals(CannedMessage, other.CannedMessage)) return false;
      if (!object.Equals(Audio, other.Audio)) return false;
      if (!object.Equals(RemoteHardware, other.RemoteHardware)) return false;
      if (!object.Equals(NeighborInfo, other.NeighborInfo)) return false;
      if (!object.Equals(AmbientLighting, other.AmbientLighting)) return false;
      if (!object.Equals(DetectionSensor, other.DetectionSensor)) return false;
      if (PayloadVariantCase != other.PayloadVariantCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadVariantCase_ == PayloadVariantOneofCase.Mqtt) hash ^= Mqtt.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.Serial) hash ^= Serial.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.ExternalNotification) hash ^= ExternalNotification.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.StoreForward) hash ^= StoreForward.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.RangeTest) hash ^= RangeTest.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.Telemetry) hash ^= Telemetry.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.CannedMessage) hash ^= CannedMessage.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.Audio) hash ^= Audio.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.RemoteHardware) hash ^= RemoteHardware.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.NeighborInfo) hash ^= NeighborInfo.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.AmbientLighting) hash ^= AmbientLighting.GetHashCode();
      if (payloadVariantCase_ == PayloadVariantOneofCase.DetectionSensor) hash ^= DetectionSensor.GetHashCode();
      hash ^= (int) payloadVariantCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (payloadVariantCase_ == PayloadVariantOneofCase.Mqtt) {
        output.WriteRawTag(10);
        output.WriteMessage(Mqtt);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Serial) {
        output.WriteRawTag(18);
        output.WriteMessage(Serial);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.ExternalNotification) {
        output.WriteRawTag(26);
        output.WriteMessage(ExternalNotification);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.StoreForward) {
        output.WriteRawTag(34);
        output.WriteMessage(StoreForward);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.RangeTest) {
        output.WriteRawTag(42);
        output.WriteMessage(RangeTest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Telemetry) {
        output.WriteRawTag(50);
        output.WriteMessage(Telemetry);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.CannedMessage) {
        output.WriteRawTag(58);
        output.WriteMessage(CannedMessage);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Audio) {
        output.WriteRawTag(66);
        output.WriteMessage(Audio);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.RemoteHardware) {
        output.WriteRawTag(74);
        output.WriteMessage(RemoteHardware);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.NeighborInfo) {
        output.WriteRawTag(82);
        output.WriteMessage(NeighborInfo);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.AmbientLighting) {
        output.WriteRawTag(90);
        output.WriteMessage(AmbientLighting);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.DetectionSensor) {
        output.WriteRawTag(98);
        output.WriteMessage(DetectionSensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (payloadVariantCase_ == PayloadVariantOneofCase.Mqtt) {
        output.WriteRawTag(10);
        output.WriteMessage(Mqtt);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Serial) {
        output.WriteRawTag(18);
        output.WriteMessage(Serial);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.ExternalNotification) {
        output.WriteRawTag(26);
        output.WriteMessage(ExternalNotification);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.StoreForward) {
        output.WriteRawTag(34);
        output.WriteMessage(StoreForward);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.RangeTest) {
        output.WriteRawTag(42);
        output.WriteMessage(RangeTest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Telemetry) {
        output.WriteRawTag(50);
        output.WriteMessage(Telemetry);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.CannedMessage) {
        output.WriteRawTag(58);
        output.WriteMessage(CannedMessage);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Audio) {
        output.WriteRawTag(66);
        output.WriteMessage(Audio);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.RemoteHardware) {
        output.WriteRawTag(74);
        output.WriteMessage(RemoteHardware);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.NeighborInfo) {
        output.WriteRawTag(82);
        output.WriteMessage(NeighborInfo);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.AmbientLighting) {
        output.WriteRawTag(90);
        output.WriteMessage(AmbientLighting);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.DetectionSensor) {
        output.WriteRawTag(98);
        output.WriteMessage(DetectionSensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (payloadVariantCase_ == PayloadVariantOneofCase.Mqtt) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mqtt);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Serial) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Serial);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.ExternalNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalNotification);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.StoreForward) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoreForward);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.RangeTest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangeTest);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Telemetry) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Telemetry);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.CannedMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CannedMessage);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.Audio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.RemoteHardware) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteHardware);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.NeighborInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NeighborInfo);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.AmbientLighting) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmbientLighting);
      }
      if (payloadVariantCase_ == PayloadVariantOneofCase.DetectionSensor) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetectionSensor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ModuleConfig other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadVariantCase) {
        case PayloadVariantOneofCase.Mqtt:
          if (Mqtt == null) {
            Mqtt = new global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig();
          }
          Mqtt.MergeFrom(other.Mqtt);
          break;
        case PayloadVariantOneofCase.Serial:
          if (Serial == null) {
            Serial = new global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig();
          }
          Serial.MergeFrom(other.Serial);
          break;
        case PayloadVariantOneofCase.ExternalNotification:
          if (ExternalNotification == null) {
            ExternalNotification = new global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig();
          }
          ExternalNotification.MergeFrom(other.ExternalNotification);
          break;
        case PayloadVariantOneofCase.StoreForward:
          if (StoreForward == null) {
            StoreForward = new global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig();
          }
          StoreForward.MergeFrom(other.StoreForward);
          break;
        case PayloadVariantOneofCase.RangeTest:
          if (RangeTest == null) {
            RangeTest = new global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig();
          }
          RangeTest.MergeFrom(other.RangeTest);
          break;
        case PayloadVariantOneofCase.Telemetry:
          if (Telemetry == null) {
            Telemetry = new global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig();
          }
          Telemetry.MergeFrom(other.Telemetry);
          break;
        case PayloadVariantOneofCase.CannedMessage:
          if (CannedMessage == null) {
            CannedMessage = new global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig();
          }
          CannedMessage.MergeFrom(other.CannedMessage);
          break;
        case PayloadVariantOneofCase.Audio:
          if (Audio == null) {
            Audio = new global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig();
          }
          Audio.MergeFrom(other.Audio);
          break;
        case PayloadVariantOneofCase.RemoteHardware:
          if (RemoteHardware == null) {
            RemoteHardware = new global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig();
          }
          RemoteHardware.MergeFrom(other.RemoteHardware);
          break;
        case PayloadVariantOneofCase.NeighborInfo:
          if (NeighborInfo == null) {
            NeighborInfo = new global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig();
          }
          NeighborInfo.MergeFrom(other.NeighborInfo);
          break;
        case PayloadVariantOneofCase.AmbientLighting:
          if (AmbientLighting == null) {
            AmbientLighting = new global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig();
          }
          AmbientLighting.MergeFrom(other.AmbientLighting);
          break;
        case PayloadVariantOneofCase.DetectionSensor:
          if (DetectionSensor == null) {
            DetectionSensor = new global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig();
          }
          DetectionSensor.MergeFrom(other.DetectionSensor);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Mqtt) {
              subBuilder.MergeFrom(Mqtt);
            }
            input.ReadMessage(subBuilder);
            Mqtt = subBuilder;
            break;
          }
          case 18: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Serial) {
              subBuilder.MergeFrom(Serial);
            }
            input.ReadMessage(subBuilder);
            Serial = subBuilder;
            break;
          }
          case 26: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.ExternalNotification) {
              subBuilder.MergeFrom(ExternalNotification);
            }
            input.ReadMessage(subBuilder);
            ExternalNotification = subBuilder;
            break;
          }
          case 34: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.StoreForward) {
              subBuilder.MergeFrom(StoreForward);
            }
            input.ReadMessage(subBuilder);
            StoreForward = subBuilder;
            break;
          }
          case 42: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.RangeTest) {
              subBuilder.MergeFrom(RangeTest);
            }
            input.ReadMessage(subBuilder);
            RangeTest = subBuilder;
            break;
          }
          case 50: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Telemetry) {
              subBuilder.MergeFrom(Telemetry);
            }
            input.ReadMessage(subBuilder);
            Telemetry = subBuilder;
            break;
          }
          case 58: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.CannedMessage) {
              subBuilder.MergeFrom(CannedMessage);
            }
            input.ReadMessage(subBuilder);
            CannedMessage = subBuilder;
            break;
          }
          case 66: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Audio) {
              subBuilder.MergeFrom(Audio);
            }
            input.ReadMessage(subBuilder);
            Audio = subBuilder;
            break;
          }
          case 74: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.RemoteHardware) {
              subBuilder.MergeFrom(RemoteHardware);
            }
            input.ReadMessage(subBuilder);
            RemoteHardware = subBuilder;
            break;
          }
          case 82: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.NeighborInfo) {
              subBuilder.MergeFrom(NeighborInfo);
            }
            input.ReadMessage(subBuilder);
            NeighborInfo = subBuilder;
            break;
          }
          case 90: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.AmbientLighting) {
              subBuilder.MergeFrom(AmbientLighting);
            }
            input.ReadMessage(subBuilder);
            AmbientLighting = subBuilder;
            break;
          }
          case 98: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.DetectionSensor) {
              subBuilder.MergeFrom(DetectionSensor);
            }
            input.ReadMessage(subBuilder);
            DetectionSensor = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.MQTTConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Mqtt) {
              subBuilder.MergeFrom(Mqtt);
            }
            input.ReadMessage(subBuilder);
            Mqtt = subBuilder;
            break;
          }
          case 18: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Serial) {
              subBuilder.MergeFrom(Serial);
            }
            input.ReadMessage(subBuilder);
            Serial = subBuilder;
            break;
          }
          case 26: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.ExternalNotificationConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.ExternalNotification) {
              subBuilder.MergeFrom(ExternalNotification);
            }
            input.ReadMessage(subBuilder);
            ExternalNotification = subBuilder;
            break;
          }
          case 34: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.StoreForwardConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.StoreForward) {
              subBuilder.MergeFrom(StoreForward);
            }
            input.ReadMessage(subBuilder);
            StoreForward = subBuilder;
            break;
          }
          case 42: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.RangeTestConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.RangeTest) {
              subBuilder.MergeFrom(RangeTest);
            }
            input.ReadMessage(subBuilder);
            RangeTest = subBuilder;
            break;
          }
          case 50: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.TelemetryConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Telemetry) {
              subBuilder.MergeFrom(Telemetry);
            }
            input.ReadMessage(subBuilder);
            Telemetry = subBuilder;
            break;
          }
          case 58: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.CannedMessage) {
              subBuilder.MergeFrom(CannedMessage);
            }
            input.ReadMessage(subBuilder);
            CannedMessage = subBuilder;
            break;
          }
          case 66: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.Audio) {
              subBuilder.MergeFrom(Audio);
            }
            input.ReadMessage(subBuilder);
            Audio = subBuilder;
            break;
          }
          case 74: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.RemoteHardwareConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.RemoteHardware) {
              subBuilder.MergeFrom(RemoteHardware);
            }
            input.ReadMessage(subBuilder);
            RemoteHardware = subBuilder;
            break;
          }
          case 82: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.NeighborInfoConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.NeighborInfo) {
              subBuilder.MergeFrom(NeighborInfo);
            }
            input.ReadMessage(subBuilder);
            NeighborInfo = subBuilder;
            break;
          }
          case 90: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.AmbientLightingConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.AmbientLighting) {
              subBuilder.MergeFrom(AmbientLighting);
            }
            input.ReadMessage(subBuilder);
            AmbientLighting = subBuilder;
            break;
          }
          case 98: {
            global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig subBuilder = new global::Meshtastic.Protobufs.ModuleConfig.Types.DetectionSensorConfig();
            if (payloadVariantCase_ == PayloadVariantOneofCase.DetectionSensor) {
              subBuilder.MergeFrom(DetectionSensor);
            }
            input.ReadMessage(subBuilder);
            DetectionSensor = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ModuleConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      ///
      /// MQTT Client Config
      /// </summary>
      public sealed partial class MQTTConfig : pb::IMessage<MQTTConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MQTTConfig> _parser = new pb::MessageParser<MQTTConfig>(() => new MQTTConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MQTTConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MQTTConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MQTTConfig(MQTTConfig other) : this() {
          enabled_ = other.enabled_;
          address_ = other.address_;
          username_ = other.username_;
          password_ = other.password_;
          encryptionEnabled_ = other.encryptionEnabled_;
          jsonEnabled_ = other.jsonEnabled_;
          tlsEnabled_ = other.tlsEnabled_;
          root_ = other.root_;
          proxyToClientEnabled_ = other.proxyToClientEnabled_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MQTTConfig Clone() {
          return new MQTTConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// If a meshtastic node is able to reach the internet it will normally attempt to gateway any channels that are marked as
        /// is_uplink_enabled or is_downlink_enabled.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 2;
        private string address_ = "";
        /// <summary>
        ///
        /// The server to use for our MQTT global message gateway feature.
        /// If not set, the default server will be used
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "username" field.</summary>
        public const int UsernameFieldNumber = 3;
        private string username_ = "";
        /// <summary>
        ///
        /// MQTT username to use (most useful for a custom MQTT server).
        /// If using a custom server, this will be honoured even if empty.
        /// If using the default server, this will only be honoured if set, otherwise the device will use the default username
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Username {
          get { return username_; }
          set {
            username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 4;
        private string password_ = "";
        /// <summary>
        ///
        /// MQTT password to use (most useful for a custom MQTT server).
        /// If using a custom server, this will be honoured even if empty.
        /// If using the default server, this will only be honoured if set, otherwise the device will use the default password
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Password {
          get { return password_; }
          set {
            password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encryption_enabled" field.</summary>
        public const int EncryptionEnabledFieldNumber = 5;
        private bool encryptionEnabled_;
        /// <summary>
        ///
        /// Whether to send encrypted or decrypted packets to MQTT.
        /// This parameter is only honoured if you also set server
        /// (the default official mqtt.meshtastic.org server can handle encrypted packets)
        /// Decrypted packets may be useful for external systems that want to consume meshtastic packets
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool EncryptionEnabled {
          get { return encryptionEnabled_; }
          set {
            encryptionEnabled_ = value;
          }
        }

        /// <summary>Field number for the "json_enabled" field.</summary>
        public const int JsonEnabledFieldNumber = 6;
        private bool jsonEnabled_;
        /// <summary>
        ///
        /// Whether to send / consume json packets on MQTT
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool JsonEnabled {
          get { return jsonEnabled_; }
          set {
            jsonEnabled_ = value;
          }
        }

        /// <summary>Field number for the "tls_enabled" field.</summary>
        public const int TlsEnabledFieldNumber = 7;
        private bool tlsEnabled_;
        /// <summary>
        ///
        /// If true, we attempt to establish a secure connection using TLS
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool TlsEnabled {
          get { return tlsEnabled_; }
          set {
            tlsEnabled_ = value;
          }
        }

        /// <summary>Field number for the "root" field.</summary>
        public const int RootFieldNumber = 8;
        private string root_ = "";
        /// <summary>
        ///
        /// The root topic to use for MQTT messages. Default is "msh".
        /// This is useful if you want to use a single MQTT server for multiple meshtastic networks and separate them via ACLs
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Root {
          get { return root_; }
          set {
            root_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "proxy_to_client_enabled" field.</summary>
        public const int ProxyToClientEnabledFieldNumber = 9;
        private bool proxyToClientEnabled_;
        /// <summary>
        ///
        /// If true, we can use the connected phone / client to proxy messages to MQTT instead of a direct connection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ProxyToClientEnabled {
          get { return proxyToClientEnabled_; }
          set {
            proxyToClientEnabled_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MQTTConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MQTTConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (Address != other.Address) return false;
          if (Username != other.Username) return false;
          if (Password != other.Password) return false;
          if (EncryptionEnabled != other.EncryptionEnabled) return false;
          if (JsonEnabled != other.JsonEnabled) return false;
          if (TlsEnabled != other.TlsEnabled) return false;
          if (Root != other.Root) return false;
          if (ProxyToClientEnabled != other.ProxyToClientEnabled) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          if (Username.Length != 0) hash ^= Username.GetHashCode();
          if (Password.Length != 0) hash ^= Password.GetHashCode();
          if (EncryptionEnabled != false) hash ^= EncryptionEnabled.GetHashCode();
          if (JsonEnabled != false) hash ^= JsonEnabled.GetHashCode();
          if (TlsEnabled != false) hash ^= TlsEnabled.GetHashCode();
          if (Root.Length != 0) hash ^= Root.GetHashCode();
          if (ProxyToClientEnabled != false) hash ^= ProxyToClientEnabled.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Address);
          }
          if (Username.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Username);
          }
          if (Password.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Password);
          }
          if (EncryptionEnabled != false) {
            output.WriteRawTag(40);
            output.WriteBool(EncryptionEnabled);
          }
          if (JsonEnabled != false) {
            output.WriteRawTag(48);
            output.WriteBool(JsonEnabled);
          }
          if (TlsEnabled != false) {
            output.WriteRawTag(56);
            output.WriteBool(TlsEnabled);
          }
          if (Root.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Root);
          }
          if (ProxyToClientEnabled != false) {
            output.WriteRawTag(72);
            output.WriteBool(ProxyToClientEnabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Address);
          }
          if (Username.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Username);
          }
          if (Password.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Password);
          }
          if (EncryptionEnabled != false) {
            output.WriteRawTag(40);
            output.WriteBool(EncryptionEnabled);
          }
          if (JsonEnabled != false) {
            output.WriteRawTag(48);
            output.WriteBool(JsonEnabled);
          }
          if (TlsEnabled != false) {
            output.WriteRawTag(56);
            output.WriteBool(TlsEnabled);
          }
          if (Root.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Root);
          }
          if (ProxyToClientEnabled != false) {
            output.WriteRawTag(72);
            output.WriteBool(ProxyToClientEnabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
          }
          if (Username.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
          }
          if (Password.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
          }
          if (EncryptionEnabled != false) {
            size += 1 + 1;
          }
          if (JsonEnabled != false) {
            size += 1 + 1;
          }
          if (TlsEnabled != false) {
            size += 1 + 1;
          }
          if (Root.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Root);
          }
          if (ProxyToClientEnabled != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MQTTConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          if (other.Username.Length != 0) {
            Username = other.Username;
          }
          if (other.Password.Length != 0) {
            Password = other.Password;
          }
          if (other.EncryptionEnabled != false) {
            EncryptionEnabled = other.EncryptionEnabled;
          }
          if (other.JsonEnabled != false) {
            JsonEnabled = other.JsonEnabled;
          }
          if (other.TlsEnabled != false) {
            TlsEnabled = other.TlsEnabled;
          }
          if (other.Root.Length != 0) {
            Root = other.Root;
          }
          if (other.ProxyToClientEnabled != false) {
            ProxyToClientEnabled = other.ProxyToClientEnabled;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 18: {
                Address = input.ReadString();
                break;
              }
              case 26: {
                Username = input.ReadString();
                break;
              }
              case 34: {
                Password = input.ReadString();
                break;
              }
              case 40: {
                EncryptionEnabled = input.ReadBool();
                break;
              }
              case 48: {
                JsonEnabled = input.ReadBool();
                break;
              }
              case 56: {
                TlsEnabled = input.ReadBool();
                break;
              }
              case 66: {
                Root = input.ReadString();
                break;
              }
              case 72: {
                ProxyToClientEnabled = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 18: {
                Address = input.ReadString();
                break;
              }
              case 26: {
                Username = input.ReadString();
                break;
              }
              case 34: {
                Password = input.ReadString();
                break;
              }
              case 40: {
                EncryptionEnabled = input.ReadBool();
                break;
              }
              case 48: {
                JsonEnabled = input.ReadBool();
                break;
              }
              case 56: {
                TlsEnabled = input.ReadBool();
                break;
              }
              case 66: {
                Root = input.ReadString();
                break;
              }
              case 72: {
                ProxyToClientEnabled = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// RemoteHardwareModule Config
      /// </summary>
      public sealed partial class RemoteHardwareConfig : pb::IMessage<RemoteHardwareConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RemoteHardwareConfig> _parser = new pb::MessageParser<RemoteHardwareConfig>(() => new RemoteHardwareConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RemoteHardwareConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RemoteHardwareConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RemoteHardwareConfig(RemoteHardwareConfig other) : this() {
          enabled_ = other.enabled_;
          allowUndefinedPinAccess_ = other.allowUndefinedPinAccess_;
          availablePins_ = other.availablePins_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RemoteHardwareConfig Clone() {
          return new RemoteHardwareConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// Whether the Module is enabled
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "allow_undefined_pin_access" field.</summary>
        public const int AllowUndefinedPinAccessFieldNumber = 2;
        private bool allowUndefinedPinAccess_;
        /// <summary>
        ///
        /// Whether the Module allows consumers to read / write to pins not defined in available_pins
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AllowUndefinedPinAccess {
          get { return allowUndefinedPinAccess_; }
          set {
            allowUndefinedPinAccess_ = value;
          }
        }

        /// <summary>Field number for the "available_pins" field.</summary>
        public const int AvailablePinsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Meshtastic.Protobufs.RemoteHardwarePin> _repeated_availablePins_codec
            = pb::FieldCodec.ForMessage(26, global::Meshtastic.Protobufs.RemoteHardwarePin.Parser);
        private readonly pbc::RepeatedField<global::Meshtastic.Protobufs.RemoteHardwarePin> availablePins_ = new pbc::RepeatedField<global::Meshtastic.Protobufs.RemoteHardwarePin>();
        /// <summary>
        ///
        /// Exposes the available pins to the mesh for reading and writing
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Meshtastic.Protobufs.RemoteHardwarePin> AvailablePins {
          get { return availablePins_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RemoteHardwareConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RemoteHardwareConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (AllowUndefinedPinAccess != other.AllowUndefinedPinAccess) return false;
          if(!availablePins_.Equals(other.availablePins_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (AllowUndefinedPinAccess != false) hash ^= AllowUndefinedPinAccess.GetHashCode();
          hash ^= availablePins_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (AllowUndefinedPinAccess != false) {
            output.WriteRawTag(16);
            output.WriteBool(AllowUndefinedPinAccess);
          }
          availablePins_.WriteTo(output, _repeated_availablePins_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (AllowUndefinedPinAccess != false) {
            output.WriteRawTag(16);
            output.WriteBool(AllowUndefinedPinAccess);
          }
          availablePins_.WriteTo(ref output, _repeated_availablePins_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (AllowUndefinedPinAccess != false) {
            size += 1 + 1;
          }
          size += availablePins_.CalculateSize(_repeated_availablePins_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RemoteHardwareConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.AllowUndefinedPinAccess != false) {
            AllowUndefinedPinAccess = other.AllowUndefinedPinAccess;
          }
          availablePins_.Add(other.availablePins_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                AllowUndefinedPinAccess = input.ReadBool();
                break;
              }
              case 26: {
                availablePins_.AddEntriesFrom(input, _repeated_availablePins_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                AllowUndefinedPinAccess = input.ReadBool();
                break;
              }
              case 26: {
                availablePins_.AddEntriesFrom(ref input, _repeated_availablePins_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// NeighborInfoModule Config
      /// </summary>
      public sealed partial class NeighborInfoConfig : pb::IMessage<NeighborInfoConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NeighborInfoConfig> _parser = new pb::MessageParser<NeighborInfoConfig>(() => new NeighborInfoConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NeighborInfoConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NeighborInfoConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NeighborInfoConfig(NeighborInfoConfig other) : this() {
          enabled_ = other.enabled_;
          updateInterval_ = other.updateInterval_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NeighborInfoConfig Clone() {
          return new NeighborInfoConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// Whether the Module is enabled
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "update_interval" field.</summary>
        public const int UpdateIntervalFieldNumber = 2;
        private uint updateInterval_;
        /// <summary>
        ///
        /// Interval in seconds of how often we should try to send our
        /// Neighbor Info to the mesh
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint UpdateInterval {
          get { return updateInterval_; }
          set {
            updateInterval_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NeighborInfoConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NeighborInfoConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (UpdateInterval != other.UpdateInterval) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (UpdateInterval != 0) hash ^= UpdateInterval.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (UpdateInterval != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(UpdateInterval);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (UpdateInterval != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(UpdateInterval);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (UpdateInterval != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UpdateInterval);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NeighborInfoConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.UpdateInterval != 0) {
            UpdateInterval = other.UpdateInterval;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                UpdateInterval = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                UpdateInterval = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// Detection Sensor Module Config
      /// </summary>
      public sealed partial class DetectionSensorConfig : pb::IMessage<DetectionSensorConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DetectionSensorConfig> _parser = new pb::MessageParser<DetectionSensorConfig>(() => new DetectionSensorConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DetectionSensorConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DetectionSensorConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DetectionSensorConfig(DetectionSensorConfig other) : this() {
          enabled_ = other.enabled_;
          minimumBroadcastSecs_ = other.minimumBroadcastSecs_;
          stateBroadcastSecs_ = other.stateBroadcastSecs_;
          sendBell_ = other.sendBell_;
          name_ = other.name_;
          monitorPin_ = other.monitorPin_;
          detectionTriggeredHigh_ = other.detectionTriggeredHigh_;
          usePullup_ = other.usePullup_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DetectionSensorConfig Clone() {
          return new DetectionSensorConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// Whether the Module is enabled
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "minimum_broadcast_secs" field.</summary>
        public const int MinimumBroadcastSecsFieldNumber = 2;
        private uint minimumBroadcastSecs_;
        /// <summary>
        ///
        /// Interval in seconds of how often we can send a message to the mesh when a state change is detected
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint MinimumBroadcastSecs {
          get { return minimumBroadcastSecs_; }
          set {
            minimumBroadcastSecs_ = value;
          }
        }

        /// <summary>Field number for the "state_broadcast_secs" field.</summary>
        public const int StateBroadcastSecsFieldNumber = 3;
        private uint stateBroadcastSecs_;
        /// <summary>
        ///
        /// Interval in seconds of how often we should send a message to the mesh with the current state regardless of changes
        /// When set to 0, only state changes will be broadcasted
        /// Works as a sort of status heartbeat for peace of mind
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint StateBroadcastSecs {
          get { return stateBroadcastSecs_; }
          set {
            stateBroadcastSecs_ = value;
          }
        }

        /// <summary>Field number for the "send_bell" field.</summary>
        public const int SendBellFieldNumber = 4;
        private bool sendBell_;
        /// <summary>
        ///
        /// Send ASCII bell with alert message
        /// Useful for triggering ext. notification on bell
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SendBell {
          get { return sendBell_; }
          set {
            sendBell_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 5;
        private string name_ = "";
        /// <summary>
        ///
        /// Friendly name used to format message sent to mesh
        /// Example: A name "Motion" would result in a message "Motion detected"
        /// Maximum length of 20 characters
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "monitor_pin" field.</summary>
        public const int MonitorPinFieldNumber = 6;
        private uint monitorPin_;
        /// <summary>
        ///
        /// GPIO pin to monitor for state changes
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint MonitorPin {
          get { return monitorPin_; }
          set {
            monitorPin_ = value;
          }
        }

        /// <summary>Field number for the "detection_triggered_high" field.</summary>
        public const int DetectionTriggeredHighFieldNumber = 7;
        private bool detectionTriggeredHigh_;
        /// <summary>
        ///
        /// Whether or not the GPIO pin state detection is triggered on HIGH (1)
        /// Otherwise LOW (0)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DetectionTriggeredHigh {
          get { return detectionTriggeredHigh_; }
          set {
            detectionTriggeredHigh_ = value;
          }
        }

        /// <summary>Field number for the "use_pullup" field.</summary>
        public const int UsePullupFieldNumber = 8;
        private bool usePullup_;
        /// <summary>
        ///
        /// Whether or not use INPUT_PULLUP mode for GPIO pin
        /// Only applicable if the board uses pull-up resistors on the pin
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UsePullup {
          get { return usePullup_; }
          set {
            usePullup_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DetectionSensorConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DetectionSensorConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (MinimumBroadcastSecs != other.MinimumBroadcastSecs) return false;
          if (StateBroadcastSecs != other.StateBroadcastSecs) return false;
          if (SendBell != other.SendBell) return false;
          if (Name != other.Name) return false;
          if (MonitorPin != other.MonitorPin) return false;
          if (DetectionTriggeredHigh != other.DetectionTriggeredHigh) return false;
          if (UsePullup != other.UsePullup) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (MinimumBroadcastSecs != 0) hash ^= MinimumBroadcastSecs.GetHashCode();
          if (StateBroadcastSecs != 0) hash ^= StateBroadcastSecs.GetHashCode();
          if (SendBell != false) hash ^= SendBell.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (MonitorPin != 0) hash ^= MonitorPin.GetHashCode();
          if (DetectionTriggeredHigh != false) hash ^= DetectionTriggeredHigh.GetHashCode();
          if (UsePullup != false) hash ^= UsePullup.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (MinimumBroadcastSecs != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(MinimumBroadcastSecs);
          }
          if (StateBroadcastSecs != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(StateBroadcastSecs);
          }
          if (SendBell != false) {
            output.WriteRawTag(32);
            output.WriteBool(SendBell);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Name);
          }
          if (MonitorPin != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(MonitorPin);
          }
          if (DetectionTriggeredHigh != false) {
            output.WriteRawTag(56);
            output.WriteBool(DetectionTriggeredHigh);
          }
          if (UsePullup != false) {
            output.WriteRawTag(64);
            output.WriteBool(UsePullup);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (MinimumBroadcastSecs != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(MinimumBroadcastSecs);
          }
          if (StateBroadcastSecs != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(StateBroadcastSecs);
          }
          if (SendBell != false) {
            output.WriteRawTag(32);
            output.WriteBool(SendBell);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Name);
          }
          if (MonitorPin != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(MonitorPin);
          }
          if (DetectionTriggeredHigh != false) {
            output.WriteRawTag(56);
            output.WriteBool(DetectionTriggeredHigh);
          }
          if (UsePullup != false) {
            output.WriteRawTag(64);
            output.WriteBool(UsePullup);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (MinimumBroadcastSecs != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinimumBroadcastSecs);
          }
          if (StateBroadcastSecs != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StateBroadcastSecs);
          }
          if (SendBell != false) {
            size += 1 + 1;
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (MonitorPin != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonitorPin);
          }
          if (DetectionTriggeredHigh != false) {
            size += 1 + 1;
          }
          if (UsePullup != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DetectionSensorConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.MinimumBroadcastSecs != 0) {
            MinimumBroadcastSecs = other.MinimumBroadcastSecs;
          }
          if (other.StateBroadcastSecs != 0) {
            StateBroadcastSecs = other.StateBroadcastSecs;
          }
          if (other.SendBell != false) {
            SendBell = other.SendBell;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.MonitorPin != 0) {
            MonitorPin = other.MonitorPin;
          }
          if (other.DetectionTriggeredHigh != false) {
            DetectionTriggeredHigh = other.DetectionTriggeredHigh;
          }
          if (other.UsePullup != false) {
            UsePullup = other.UsePullup;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                MinimumBroadcastSecs = input.ReadUInt32();
                break;
              }
              case 24: {
                StateBroadcastSecs = input.ReadUInt32();
                break;
              }
              case 32: {
                SendBell = input.ReadBool();
                break;
              }
              case 42: {
                Name = input.ReadString();
                break;
              }
              case 48: {
                MonitorPin = input.ReadUInt32();
                break;
              }
              case 56: {
                DetectionTriggeredHigh = input.ReadBool();
                break;
              }
              case 64: {
                UsePullup = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                MinimumBroadcastSecs = input.ReadUInt32();
                break;
              }
              case 24: {
                StateBroadcastSecs = input.ReadUInt32();
                break;
              }
              case 32: {
                SendBell = input.ReadBool();
                break;
              }
              case 42: {
                Name = input.ReadString();
                break;
              }
              case 48: {
                MonitorPin = input.ReadUInt32();
                break;
              }
              case 56: {
                DetectionTriggeredHigh = input.ReadBool();
                break;
              }
              case 64: {
                UsePullup = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// Audio Config for codec2 voice
      /// </summary>
      public sealed partial class AudioConfig : pb::IMessage<AudioConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AudioConfig> _parser = new pb::MessageParser<AudioConfig>(() => new AudioConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AudioConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AudioConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AudioConfig(AudioConfig other) : this() {
          codec2Enabled_ = other.codec2Enabled_;
          pttPin_ = other.pttPin_;
          bitrate_ = other.bitrate_;
          i2SWs_ = other.i2SWs_;
          i2SSd_ = other.i2SSd_;
          i2SDin_ = other.i2SDin_;
          i2SSck_ = other.i2SSck_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AudioConfig Clone() {
          return new AudioConfig(this);
        }

        /// <summary>Field number for the "codec2_enabled" field.</summary>
        public const int Codec2EnabledFieldNumber = 1;
        private bool codec2Enabled_;
        /// <summary>
        ///
        /// Whether Audio is enabled
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Codec2Enabled {
          get { return codec2Enabled_; }
          set {
            codec2Enabled_ = value;
          }
        }

        /// <summary>Field number for the "ptt_pin" field.</summary>
        public const int PttPinFieldNumber = 2;
        private uint pttPin_;
        /// <summary>
        ///
        /// PTT Pin
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint PttPin {
          get { return pttPin_; }
          set {
            pttPin_ = value;
          }
        }

        /// <summary>Field number for the "bitrate" field.</summary>
        public const int BitrateFieldNumber = 3;
        private global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud bitrate_ = global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud.Codec2Default;
        /// <summary>
        ///
        /// The audio sample rate to use for codec2
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud Bitrate {
          get { return bitrate_; }
          set {
            bitrate_ = value;
          }
        }

        /// <summary>Field number for the "i2s_ws" field.</summary>
        public const int I2SWsFieldNumber = 4;
        private uint i2SWs_;
        /// <summary>
        ///
        /// I2S Word Select
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint I2SWs {
          get { return i2SWs_; }
          set {
            i2SWs_ = value;
          }
        }

        /// <summary>Field number for the "i2s_sd" field.</summary>
        public const int I2SSdFieldNumber = 5;
        private uint i2SSd_;
        /// <summary>
        ///
        /// I2S Data IN
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint I2SSd {
          get { return i2SSd_; }
          set {
            i2SSd_ = value;
          }
        }

        /// <summary>Field number for the "i2s_din" field.</summary>
        public const int I2SDinFieldNumber = 6;
        private uint i2SDin_;
        /// <summary>
        ///
        /// I2S Data OUT
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint I2SDin {
          get { return i2SDin_; }
          set {
            i2SDin_ = value;
          }
        }

        /// <summary>Field number for the "i2s_sck" field.</summary>
        public const int I2SSckFieldNumber = 7;
        private uint i2SSck_;
        /// <summary>
        ///
        /// I2S Clock
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint I2SSck {
          get { return i2SSck_; }
          set {
            i2SSck_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AudioConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AudioConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Codec2Enabled != other.Codec2Enabled) return false;
          if (PttPin != other.PttPin) return false;
          if (Bitrate != other.Bitrate) return false;
          if (I2SWs != other.I2SWs) return false;
          if (I2SSd != other.I2SSd) return false;
          if (I2SDin != other.I2SDin) return false;
          if (I2SSck != other.I2SSck) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Codec2Enabled != false) hash ^= Codec2Enabled.GetHashCode();
          if (PttPin != 0) hash ^= PttPin.GetHashCode();
          if (Bitrate != global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud.Codec2Default) hash ^= Bitrate.GetHashCode();
          if (I2SWs != 0) hash ^= I2SWs.GetHashCode();
          if (I2SSd != 0) hash ^= I2SSd.GetHashCode();
          if (I2SDin != 0) hash ^= I2SDin.GetHashCode();
          if (I2SSck != 0) hash ^= I2SSck.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Codec2Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Codec2Enabled);
          }
          if (PttPin != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(PttPin);
          }
          if (Bitrate != global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud.Codec2Default) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Bitrate);
          }
          if (I2SWs != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(I2SWs);
          }
          if (I2SSd != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(I2SSd);
          }
          if (I2SDin != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(I2SDin);
          }
          if (I2SSck != 0) {
            output.WriteRawTag(56);
            output.WriteUInt32(I2SSck);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Codec2Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Codec2Enabled);
          }
          if (PttPin != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(PttPin);
          }
          if (Bitrate != global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud.Codec2Default) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Bitrate);
          }
          if (I2SWs != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(I2SWs);
          }
          if (I2SSd != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(I2SSd);
          }
          if (I2SDin != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(I2SDin);
          }
          if (I2SSck != 0) {
            output.WriteRawTag(56);
            output.WriteUInt32(I2SSck);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Codec2Enabled != false) {
            size += 1 + 1;
          }
          if (PttPin != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PttPin);
          }
          if (Bitrate != global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud.Codec2Default) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Bitrate);
          }
          if (I2SWs != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(I2SWs);
          }
          if (I2SSd != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(I2SSd);
          }
          if (I2SDin != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(I2SDin);
          }
          if (I2SSck != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(I2SSck);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AudioConfig other) {
          if (other == null) {
            return;
          }
          if (other.Codec2Enabled != false) {
            Codec2Enabled = other.Codec2Enabled;
          }
          if (other.PttPin != 0) {
            PttPin = other.PttPin;
          }
          if (other.Bitrate != global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud.Codec2Default) {
            Bitrate = other.Bitrate;
          }
          if (other.I2SWs != 0) {
            I2SWs = other.I2SWs;
          }
          if (other.I2SSd != 0) {
            I2SSd = other.I2SSd;
          }
          if (other.I2SDin != 0) {
            I2SDin = other.I2SDin;
          }
          if (other.I2SSck != 0) {
            I2SSck = other.I2SSck;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Codec2Enabled = input.ReadBool();
                break;
              }
              case 16: {
                PttPin = input.ReadUInt32();
                break;
              }
              case 24: {
                Bitrate = (global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud) input.ReadEnum();
                break;
              }
              case 32: {
                I2SWs = input.ReadUInt32();
                break;
              }
              case 40: {
                I2SSd = input.ReadUInt32();
                break;
              }
              case 48: {
                I2SDin = input.ReadUInt32();
                break;
              }
              case 56: {
                I2SSck = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Codec2Enabled = input.ReadBool();
                break;
              }
              case 16: {
                PttPin = input.ReadUInt32();
                break;
              }
              case 24: {
                Bitrate = (global::Meshtastic.Protobufs.ModuleConfig.Types.AudioConfig.Types.Audio_Baud) input.ReadEnum();
                break;
              }
              case 32: {
                I2SWs = input.ReadUInt32();
                break;
              }
              case 40: {
                I2SSd = input.ReadUInt32();
                break;
              }
              case 48: {
                I2SDin = input.ReadUInt32();
                break;
              }
              case 56: {
                I2SSck = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the AudioConfig message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          ///
          /// Baudrate for codec2 voice
          /// </summary>
          public enum Audio_Baud {
            [pbr::OriginalName("CODEC2_DEFAULT")] Codec2Default = 0,
            [pbr::OriginalName("CODEC2_3200")] Codec23200 = 1,
            [pbr::OriginalName("CODEC2_2400")] Codec22400 = 2,
            [pbr::OriginalName("CODEC2_1600")] Codec21600 = 3,
            [pbr::OriginalName("CODEC2_1400")] Codec21400 = 4,
            [pbr::OriginalName("CODEC2_1300")] Codec21300 = 5,
            [pbr::OriginalName("CODEC2_1200")] Codec21200 = 6,
            [pbr::OriginalName("CODEC2_700")] Codec2700 = 7,
            [pbr::OriginalName("CODEC2_700B")] Codec2700B = 8,
          }

        }
        #endregion

      }

      /// <summary>
      ///
      /// Serial Config
      /// </summary>
      public sealed partial class SerialConfig : pb::IMessage<SerialConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SerialConfig> _parser = new pb::MessageParser<SerialConfig>(() => new SerialConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SerialConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SerialConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SerialConfig(SerialConfig other) : this() {
          enabled_ = other.enabled_;
          echo_ = other.echo_;
          rxd_ = other.rxd_;
          txd_ = other.txd_;
          baud_ = other.baud_;
          timeout_ = other.timeout_;
          mode_ = other.mode_;
          overrideConsoleSerialPort_ = other.overrideConsoleSerialPort_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SerialConfig Clone() {
          return new SerialConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// Preferences for the SerialModule
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "echo" field.</summary>
        public const int EchoFieldNumber = 2;
        private bool echo_;
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Echo {
          get { return echo_; }
          set {
            echo_ = value;
          }
        }

        /// <summary>Field number for the "rxd" field.</summary>
        public const int RxdFieldNumber = 3;
        private uint rxd_;
        /// <summary>
        ///
        /// RX pin (should match Arduino gpio pin number)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Rxd {
          get { return rxd_; }
          set {
            rxd_ = value;
          }
        }

        /// <summary>Field number for the "txd" field.</summary>
        public const int TxdFieldNumber = 4;
        private uint txd_;
        /// <summary>
        ///
        /// TX pin (should match Arduino gpio pin number)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Txd {
          get { return txd_; }
          set {
            txd_ = value;
          }
        }

        /// <summary>Field number for the "baud" field.</summary>
        public const int BaudFieldNumber = 5;
        private global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud baud_ = global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud.BaudDefault;
        /// <summary>
        ///
        /// Serial baud rate
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud Baud {
          get { return baud_; }
          set {
            baud_ = value;
          }
        }

        /// <summary>Field number for the "timeout" field.</summary>
        public const int TimeoutFieldNumber = 6;
        private uint timeout_;
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Timeout {
          get { return timeout_; }
          set {
            timeout_ = value;
          }
        }

        /// <summary>Field number for the "mode" field.</summary>
        public const int ModeFieldNumber = 7;
        private global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode mode_ = global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode.Default;
        /// <summary>
        ///
        /// Mode for serial module operation
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode Mode {
          get { return mode_; }
          set {
            mode_ = value;
          }
        }

        /// <summary>Field number for the "override_console_serial_port" field.</summary>
        public const int OverrideConsoleSerialPortFieldNumber = 8;
        private bool overrideConsoleSerialPort_;
        /// <summary>
        ///
        /// Overrides the platform's defacto Serial port instance to use with Serial module config settings
        /// This is currently only usable in output modes like NMEA / CalTopo and may behave strangely or not work at all in other modes
        /// Existing logging over the Serial Console will still be present
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool OverrideConsoleSerialPort {
          get { return overrideConsoleSerialPort_; }
          set {
            overrideConsoleSerialPort_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SerialConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SerialConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (Echo != other.Echo) return false;
          if (Rxd != other.Rxd) return false;
          if (Txd != other.Txd) return false;
          if (Baud != other.Baud) return false;
          if (Timeout != other.Timeout) return false;
          if (Mode != other.Mode) return false;
          if (OverrideConsoleSerialPort != other.OverrideConsoleSerialPort) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (Echo != false) hash ^= Echo.GetHashCode();
          if (Rxd != 0) hash ^= Rxd.GetHashCode();
          if (Txd != 0) hash ^= Txd.GetHashCode();
          if (Baud != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud.BaudDefault) hash ^= Baud.GetHashCode();
          if (Timeout != 0) hash ^= Timeout.GetHashCode();
          if (Mode != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode.Default) hash ^= Mode.GetHashCode();
          if (OverrideConsoleSerialPort != false) hash ^= OverrideConsoleSerialPort.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Echo != false) {
            output.WriteRawTag(16);
            output.WriteBool(Echo);
          }
          if (Rxd != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Rxd);
          }
          if (Txd != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Txd);
          }
          if (Baud != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud.BaudDefault) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Baud);
          }
          if (Timeout != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(Timeout);
          }
          if (Mode != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode.Default) {
            output.WriteRawTag(56);
            output.WriteEnum((int) Mode);
          }
          if (OverrideConsoleSerialPort != false) {
            output.WriteRawTag(64);
            output.WriteBool(OverrideConsoleSerialPort);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Echo != false) {
            output.WriteRawTag(16);
            output.WriteBool(Echo);
          }
          if (Rxd != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Rxd);
          }
          if (Txd != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Txd);
          }
          if (Baud != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud.BaudDefault) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Baud);
          }
          if (Timeout != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(Timeout);
          }
          if (Mode != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode.Default) {
            output.WriteRawTag(56);
            output.WriteEnum((int) Mode);
          }
          if (OverrideConsoleSerialPort != false) {
            output.WriteRawTag(64);
            output.WriteBool(OverrideConsoleSerialPort);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (Echo != false) {
            size += 1 + 1;
          }
          if (Rxd != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rxd);
          }
          if (Txd != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Txd);
          }
          if (Baud != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud.BaudDefault) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Baud);
          }
          if (Timeout != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timeout);
          }
          if (Mode != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode.Default) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
          }
          if (OverrideConsoleSerialPort != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SerialConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.Echo != false) {
            Echo = other.Echo;
          }
          if (other.Rxd != 0) {
            Rxd = other.Rxd;
          }
          if (other.Txd != 0) {
            Txd = other.Txd;
          }
          if (other.Baud != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud.BaudDefault) {
            Baud = other.Baud;
          }
          if (other.Timeout != 0) {
            Timeout = other.Timeout;
          }
          if (other.Mode != global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode.Default) {
            Mode = other.Mode;
          }
          if (other.OverrideConsoleSerialPort != false) {
            OverrideConsoleSerialPort = other.OverrideConsoleSerialPort;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                Echo = input.ReadBool();
                break;
              }
              case 24: {
                Rxd = input.ReadUInt32();
                break;
              }
              case 32: {
                Txd = input.ReadUInt32();
                break;
              }
              case 40: {
                Baud = (global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud) input.ReadEnum();
                break;
              }
              case 48: {
                Timeout = input.ReadUInt32();
                break;
              }
              case 56: {
                Mode = (global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode) input.ReadEnum();
                break;
              }
              case 64: {
                OverrideConsoleSerialPort = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                Echo = input.ReadBool();
                break;
              }
              case 24: {
                Rxd = input.ReadUInt32();
                break;
              }
              case 32: {
                Txd = input.ReadUInt32();
                break;
              }
              case 40: {
                Baud = (global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Baud) input.ReadEnum();
                break;
              }
              case 48: {
                Timeout = input.ReadUInt32();
                break;
              }
              case 56: {
                Mode = (global::Meshtastic.Protobufs.ModuleConfig.Types.SerialConfig.Types.Serial_Mode) input.ReadEnum();
                break;
              }
              case 64: {
                OverrideConsoleSerialPort = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the SerialConfig message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          ///
          /// TODO: REPLACE
          /// </summary>
          public enum Serial_Baud {
            [pbr::OriginalName("BAUD_DEFAULT")] BaudDefault = 0,
            [pbr::OriginalName("BAUD_110")] Baud110 = 1,
            [pbr::OriginalName("BAUD_300")] Baud300 = 2,
            [pbr::OriginalName("BAUD_600")] Baud600 = 3,
            [pbr::OriginalName("BAUD_1200")] Baud1200 = 4,
            [pbr::OriginalName("BAUD_2400")] Baud2400 = 5,
            [pbr::OriginalName("BAUD_4800")] Baud4800 = 6,
            [pbr::OriginalName("BAUD_9600")] Baud9600 = 7,
            [pbr::OriginalName("BAUD_19200")] Baud19200 = 8,
            [pbr::OriginalName("BAUD_38400")] Baud38400 = 9,
            [pbr::OriginalName("BAUD_57600")] Baud57600 = 10,
            [pbr::OriginalName("BAUD_115200")] Baud115200 = 11,
            [pbr::OriginalName("BAUD_230400")] Baud230400 = 12,
            [pbr::OriginalName("BAUD_460800")] Baud460800 = 13,
            [pbr::OriginalName("BAUD_576000")] Baud576000 = 14,
            [pbr::OriginalName("BAUD_921600")] Baud921600 = 15,
          }

          /// <summary>
          ///
          /// TODO: REPLACE
          /// </summary>
          public enum Serial_Mode {
            [pbr::OriginalName("DEFAULT")] Default = 0,
            [pbr::OriginalName("SIMPLE")] Simple = 1,
            [pbr::OriginalName("PROTO")] Proto = 2,
            [pbr::OriginalName("TEXTMSG")] Textmsg = 3,
            [pbr::OriginalName("NMEA")] Nmea = 4,
            /// <summary>
            /// NMEA messages specifically tailored for CalTopo
            /// </summary>
            [pbr::OriginalName("CALTOPO")] Caltopo = 5,
          }

        }
        #endregion

      }

      /// <summary>
      ///
      /// External Notifications Config
      /// </summary>
      public sealed partial class ExternalNotificationConfig : pb::IMessage<ExternalNotificationConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExternalNotificationConfig> _parser = new pb::MessageParser<ExternalNotificationConfig>(() => new ExternalNotificationConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ExternalNotificationConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ExternalNotificationConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ExternalNotificationConfig(ExternalNotificationConfig other) : this() {
          enabled_ = other.enabled_;
          outputMs_ = other.outputMs_;
          output_ = other.output_;
          outputVibra_ = other.outputVibra_;
          outputBuzzer_ = other.outputBuzzer_;
          active_ = other.active_;
          alertMessage_ = other.alertMessage_;
          alertMessageVibra_ = other.alertMessageVibra_;
          alertMessageBuzzer_ = other.alertMessageBuzzer_;
          alertBell_ = other.alertBell_;
          alertBellVibra_ = other.alertBellVibra_;
          alertBellBuzzer_ = other.alertBellBuzzer_;
          usePwm_ = other.usePwm_;
          nagTimeout_ = other.nagTimeout_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ExternalNotificationConfig Clone() {
          return new ExternalNotificationConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// Enable the ExternalNotificationModule
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "output_ms" field.</summary>
        public const int OutputMsFieldNumber = 2;
        private uint outputMs_;
        /// <summary>
        ///
        /// When using in On/Off mode, keep the output on for this many
        /// milliseconds. Default 1000ms (1 second).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint OutputMs {
          get { return outputMs_; }
          set {
            outputMs_ = value;
          }
        }

        /// <summary>Field number for the "output" field.</summary>
        public const int OutputFieldNumber = 3;
        private uint output_;
        /// <summary>
        ///
        /// Define the output pin GPIO setting Defaults to
        /// EXT_NOTIFY_OUT if set for the board.
        /// In standalone devices this pin should drive the LED to match the UI.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Output {
          get { return output_; }
          set {
            output_ = value;
          }
        }

        /// <summary>Field number for the "output_vibra" field.</summary>
        public const int OutputVibraFieldNumber = 8;
        private uint outputVibra_;
        /// <summary>
        ///
        /// Optional: Define a secondary output pin for a vibra motor
        /// This is used in standalone devices to match the UI.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint OutputVibra {
          get { return outputVibra_; }
          set {
            outputVibra_ = value;
          }
        }

        /// <summary>Field number for the "output_buzzer" field.</summary>
        public const int OutputBuzzerFieldNumber = 9;
        private uint outputBuzzer_;
        /// <summary>
        ///
        /// Optional: Define a tertiary output pin for an active buzzer
        /// This is used in standalone devices to to match the UI.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint OutputBuzzer {
          get { return outputBuzzer_; }
          set {
            outputBuzzer_ = value;
          }
        }

        /// <summary>Field number for the "active" field.</summary>
        public const int ActiveFieldNumber = 4;
        private bool active_;
        /// <summary>
        ///
        /// IF this is true, the 'output' Pin will be pulled active high, false
        /// means active low.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Active {
          get { return active_; }
          set {
            active_ = value;
          }
        }

        /// <summary>Field number for the "alert_message" field.</summary>
        public const int AlertMessageFieldNumber = 5;
        private bool alertMessage_;
        /// <summary>
        ///
        /// True: Alert when a text message arrives (output)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AlertMessage {
          get { return alertMessage_; }
          set {
            alertMessage_ = value;
          }
        }

        /// <summary>Field number for the "alert_message_vibra" field.</summary>
        public const int AlertMessageVibraFieldNumber = 10;
        private bool alertMessageVibra_;
        /// <summary>
        ///
        /// True: Alert when a text message arrives (output_vibra)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AlertMessageVibra {
          get { return alertMessageVibra_; }
          set {
            alertMessageVibra_ = value;
          }
        }

        /// <summary>Field number for the "alert_message_buzzer" field.</summary>
        public const int AlertMessageBuzzerFieldNumber = 11;
        private bool alertMessageBuzzer_;
        /// <summary>
        ///
        /// True: Alert when a text message arrives (output_buzzer)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AlertMessageBuzzer {
          get { return alertMessageBuzzer_; }
          set {
            alertMessageBuzzer_ = value;
          }
        }

        /// <summary>Field number for the "alert_bell" field.</summary>
        public const int AlertBellFieldNumber = 6;
        private bool alertBell_;
        /// <summary>
        ///
        /// True: Alert when the bell character is received (output)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AlertBell {
          get { return alertBell_; }
          set {
            alertBell_ = value;
          }
        }

        /// <summary>Field number for the "alert_bell_vibra" field.</summary>
        public const int AlertBellVibraFieldNumber = 12;
        private bool alertBellVibra_;
        /// <summary>
        ///
        /// True: Alert when the bell character is received (output_vibra)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AlertBellVibra {
          get { return alertBellVibra_; }
          set {
            alertBellVibra_ = value;
          }
        }

        /// <summary>Field number for the "alert_bell_buzzer" field.</summary>
        public const int AlertBellBuzzerFieldNumber = 13;
        private bool alertBellBuzzer_;
        /// <summary>
        ///
        /// True: Alert when the bell character is received (output_buzzer)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AlertBellBuzzer {
          get { return alertBellBuzzer_; }
          set {
            alertBellBuzzer_ = value;
          }
        }

        /// <summary>Field number for the "use_pwm" field.</summary>
        public const int UsePwmFieldNumber = 7;
        private bool usePwm_;
        /// <summary>
        ///
        /// use a PWM output instead of a simple on/off output. This will ignore
        /// the 'output', 'output_ms' and 'active' settings and use the
        /// device.buzzer_gpio instead.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UsePwm {
          get { return usePwm_; }
          set {
            usePwm_ = value;
          }
        }

        /// <summary>Field number for the "nag_timeout" field.</summary>
        public const int NagTimeoutFieldNumber = 14;
        private uint nagTimeout_;
        /// <summary>
        ///
        /// The notification will toggle with 'output_ms' for this time of seconds.
        /// Default is 0 which means don't repeat at all. 60 would mean blink
        /// and/or beep for 60 seconds
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint NagTimeout {
          get { return nagTimeout_; }
          set {
            nagTimeout_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ExternalNotificationConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ExternalNotificationConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (OutputMs != other.OutputMs) return false;
          if (Output != other.Output) return false;
          if (OutputVibra != other.OutputVibra) return false;
          if (OutputBuzzer != other.OutputBuzzer) return false;
          if (Active != other.Active) return false;
          if (AlertMessage != other.AlertMessage) return false;
          if (AlertMessageVibra != other.AlertMessageVibra) return false;
          if (AlertMessageBuzzer != other.AlertMessageBuzzer) return false;
          if (AlertBell != other.AlertBell) return false;
          if (AlertBellVibra != other.AlertBellVibra) return false;
          if (AlertBellBuzzer != other.AlertBellBuzzer) return false;
          if (UsePwm != other.UsePwm) return false;
          if (NagTimeout != other.NagTimeout) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (OutputMs != 0) hash ^= OutputMs.GetHashCode();
          if (Output != 0) hash ^= Output.GetHashCode();
          if (OutputVibra != 0) hash ^= OutputVibra.GetHashCode();
          if (OutputBuzzer != 0) hash ^= OutputBuzzer.GetHashCode();
          if (Active != false) hash ^= Active.GetHashCode();
          if (AlertMessage != false) hash ^= AlertMessage.GetHashCode();
          if (AlertMessageVibra != false) hash ^= AlertMessageVibra.GetHashCode();
          if (AlertMessageBuzzer != false) hash ^= AlertMessageBuzzer.GetHashCode();
          if (AlertBell != false) hash ^= AlertBell.GetHashCode();
          if (AlertBellVibra != false) hash ^= AlertBellVibra.GetHashCode();
          if (AlertBellBuzzer != false) hash ^= AlertBellBuzzer.GetHashCode();
          if (UsePwm != false) hash ^= UsePwm.GetHashCode();
          if (NagTimeout != 0) hash ^= NagTimeout.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (OutputMs != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(OutputMs);
          }
          if (Output != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Output);
          }
          if (Active != false) {
            output.WriteRawTag(32);
            output.WriteBool(Active);
          }
          if (AlertMessage != false) {
            output.WriteRawTag(40);
            output.WriteBool(AlertMessage);
          }
          if (AlertBell != false) {
            output.WriteRawTag(48);
            output.WriteBool(AlertBell);
          }
          if (UsePwm != false) {
            output.WriteRawTag(56);
            output.WriteBool(UsePwm);
          }
          if (OutputVibra != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(OutputVibra);
          }
          if (OutputBuzzer != 0) {
            output.WriteRawTag(72);
            output.WriteUInt32(OutputBuzzer);
          }
          if (AlertMessageVibra != false) {
            output.WriteRawTag(80);
            output.WriteBool(AlertMessageVibra);
          }
          if (AlertMessageBuzzer != false) {
            output.WriteRawTag(88);
            output.WriteBool(AlertMessageBuzzer);
          }
          if (AlertBellVibra != false) {
            output.WriteRawTag(96);
            output.WriteBool(AlertBellVibra);
          }
          if (AlertBellBuzzer != false) {
            output.WriteRawTag(104);
            output.WriteBool(AlertBellBuzzer);
          }
          if (NagTimeout != 0) {
            output.WriteRawTag(112);
            output.WriteUInt32(NagTimeout);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (OutputMs != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(OutputMs);
          }
          if (Output != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Output);
          }
          if (Active != false) {
            output.WriteRawTag(32);
            output.WriteBool(Active);
          }
          if (AlertMessage != false) {
            output.WriteRawTag(40);
            output.WriteBool(AlertMessage);
          }
          if (AlertBell != false) {
            output.WriteRawTag(48);
            output.WriteBool(AlertBell);
          }
          if (UsePwm != false) {
            output.WriteRawTag(56);
            output.WriteBool(UsePwm);
          }
          if (OutputVibra != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(OutputVibra);
          }
          if (OutputBuzzer != 0) {
            output.WriteRawTag(72);
            output.WriteUInt32(OutputBuzzer);
          }
          if (AlertMessageVibra != false) {
            output.WriteRawTag(80);
            output.WriteBool(AlertMessageVibra);
          }
          if (AlertMessageBuzzer != false) {
            output.WriteRawTag(88);
            output.WriteBool(AlertMessageBuzzer);
          }
          if (AlertBellVibra != false) {
            output.WriteRawTag(96);
            output.WriteBool(AlertBellVibra);
          }
          if (AlertBellBuzzer != false) {
            output.WriteRawTag(104);
            output.WriteBool(AlertBellBuzzer);
          }
          if (NagTimeout != 0) {
            output.WriteRawTag(112);
            output.WriteUInt32(NagTimeout);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (OutputMs != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutputMs);
          }
          if (Output != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Output);
          }
          if (OutputVibra != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutputVibra);
          }
          if (OutputBuzzer != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutputBuzzer);
          }
          if (Active != false) {
            size += 1 + 1;
          }
          if (AlertMessage != false) {
            size += 1 + 1;
          }
          if (AlertMessageVibra != false) {
            size += 1 + 1;
          }
          if (AlertMessageBuzzer != false) {
            size += 1 + 1;
          }
          if (AlertBell != false) {
            size += 1 + 1;
          }
          if (AlertBellVibra != false) {
            size += 1 + 1;
          }
          if (AlertBellBuzzer != false) {
            size += 1 + 1;
          }
          if (UsePwm != false) {
            size += 1 + 1;
          }
          if (NagTimeout != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NagTimeout);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ExternalNotificationConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.OutputMs != 0) {
            OutputMs = other.OutputMs;
          }
          if (other.Output != 0) {
            Output = other.Output;
          }
          if (other.OutputVibra != 0) {
            OutputVibra = other.OutputVibra;
          }
          if (other.OutputBuzzer != 0) {
            OutputBuzzer = other.OutputBuzzer;
          }
          if (other.Active != false) {
            Active = other.Active;
          }
          if (other.AlertMessage != false) {
            AlertMessage = other.AlertMessage;
          }
          if (other.AlertMessageVibra != false) {
            AlertMessageVibra = other.AlertMessageVibra;
          }
          if (other.AlertMessageBuzzer != false) {
            AlertMessageBuzzer = other.AlertMessageBuzzer;
          }
          if (other.AlertBell != false) {
            AlertBell = other.AlertBell;
          }
          if (other.AlertBellVibra != false) {
            AlertBellVibra = other.AlertBellVibra;
          }
          if (other.AlertBellBuzzer != false) {
            AlertBellBuzzer = other.AlertBellBuzzer;
          }
          if (other.UsePwm != false) {
            UsePwm = other.UsePwm;
          }
          if (other.NagTimeout != 0) {
            NagTimeout = other.NagTimeout;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                OutputMs = input.ReadUInt32();
                break;
              }
              case 24: {
                Output = input.ReadUInt32();
                break;
              }
              case 32: {
                Active = input.ReadBool();
                break;
              }
              case 40: {
                AlertMessage = input.ReadBool();
                break;
              }
              case 48: {
                AlertBell = input.ReadBool();
                break;
              }
              case 56: {
                UsePwm = input.ReadBool();
                break;
              }
              case 64: {
                OutputVibra = input.ReadUInt32();
                break;
              }
              case 72: {
                OutputBuzzer = input.ReadUInt32();
                break;
              }
              case 80: {
                AlertMessageVibra = input.ReadBool();
                break;
              }
              case 88: {
                AlertMessageBuzzer = input.ReadBool();
                break;
              }
              case 96: {
                AlertBellVibra = input.ReadBool();
                break;
              }
              case 104: {
                AlertBellBuzzer = input.ReadBool();
                break;
              }
              case 112: {
                NagTimeout = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                OutputMs = input.ReadUInt32();
                break;
              }
              case 24: {
                Output = input.ReadUInt32();
                break;
              }
              case 32: {
                Active = input.ReadBool();
                break;
              }
              case 40: {
                AlertMessage = input.ReadBool();
                break;
              }
              case 48: {
                AlertBell = input.ReadBool();
                break;
              }
              case 56: {
                UsePwm = input.ReadBool();
                break;
              }
              case 64: {
                OutputVibra = input.ReadUInt32();
                break;
              }
              case 72: {
                OutputBuzzer = input.ReadUInt32();
                break;
              }
              case 80: {
                AlertMessageVibra = input.ReadBool();
                break;
              }
              case 88: {
                AlertMessageBuzzer = input.ReadBool();
                break;
              }
              case 96: {
                AlertBellVibra = input.ReadBool();
                break;
              }
              case 104: {
                AlertBellBuzzer = input.ReadBool();
                break;
              }
              case 112: {
                NagTimeout = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// Store and Forward Module Config
      /// </summary>
      public sealed partial class StoreForwardConfig : pb::IMessage<StoreForwardConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StoreForwardConfig> _parser = new pb::MessageParser<StoreForwardConfig>(() => new StoreForwardConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<StoreForwardConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StoreForwardConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StoreForwardConfig(StoreForwardConfig other) : this() {
          enabled_ = other.enabled_;
          heartbeat_ = other.heartbeat_;
          records_ = other.records_;
          historyReturnMax_ = other.historyReturnMax_;
          historyReturnWindow_ = other.historyReturnWindow_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StoreForwardConfig Clone() {
          return new StoreForwardConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// Enable the Store and Forward Module
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "heartbeat" field.</summary>
        public const int HeartbeatFieldNumber = 2;
        private bool heartbeat_;
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Heartbeat {
          get { return heartbeat_; }
          set {
            heartbeat_ = value;
          }
        }

        /// <summary>Field number for the "records" field.</summary>
        public const int RecordsFieldNumber = 3;
        private uint records_;
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Records {
          get { return records_; }
          set {
            records_ = value;
          }
        }

        /// <summary>Field number for the "history_return_max" field.</summary>
        public const int HistoryReturnMaxFieldNumber = 4;
        private uint historyReturnMax_;
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint HistoryReturnMax {
          get { return historyReturnMax_; }
          set {
            historyReturnMax_ = value;
          }
        }

        /// <summary>Field number for the "history_return_window" field.</summary>
        public const int HistoryReturnWindowFieldNumber = 5;
        private uint historyReturnWindow_;
        /// <summary>
        ///
        /// TODO: REPLACE
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint HistoryReturnWindow {
          get { return historyReturnWindow_; }
          set {
            historyReturnWindow_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as StoreForwardConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(StoreForwardConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (Heartbeat != other.Heartbeat) return false;
          if (Records != other.Records) return false;
          if (HistoryReturnMax != other.HistoryReturnMax) return false;
          if (HistoryReturnWindow != other.HistoryReturnWindow) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (Heartbeat != false) hash ^= Heartbeat.GetHashCode();
          if (Records != 0) hash ^= Records.GetHashCode();
          if (HistoryReturnMax != 0) hash ^= HistoryReturnMax.GetHashCode();
          if (HistoryReturnWindow != 0) hash ^= HistoryReturnWindow.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Heartbeat != false) {
            output.WriteRawTag(16);
            output.WriteBool(Heartbeat);
          }
          if (Records != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Records);
          }
          if (HistoryReturnMax != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(HistoryReturnMax);
          }
          if (HistoryReturnWindow != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(HistoryReturnWindow);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Heartbeat != false) {
            output.WriteRawTag(16);
            output.WriteBool(Heartbeat);
          }
          if (Records != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Records);
          }
          if (HistoryReturnMax != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(HistoryReturnMax);
          }
          if (HistoryReturnWindow != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(HistoryReturnWindow);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (Heartbeat != false) {
            size += 1 + 1;
          }
          if (Records != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Records);
          }
          if (HistoryReturnMax != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HistoryReturnMax);
          }
          if (HistoryReturnWindow != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HistoryReturnWindow);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(StoreForwardConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.Heartbeat != false) {
            Heartbeat = other.Heartbeat;
          }
          if (other.Records != 0) {
            Records = other.Records;
          }
          if (other.HistoryReturnMax != 0) {
            HistoryReturnMax = other.HistoryReturnMax;
          }
          if (other.HistoryReturnWindow != 0) {
            HistoryReturnWindow = other.HistoryReturnWindow;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                Heartbeat = input.ReadBool();
                break;
              }
              case 24: {
                Records = input.ReadUInt32();
                break;
              }
              case 32: {
                HistoryReturnMax = input.ReadUInt32();
                break;
              }
              case 40: {
                HistoryReturnWindow = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                Heartbeat = input.ReadBool();
                break;
              }
              case 24: {
                Records = input.ReadUInt32();
                break;
              }
              case 32: {
                HistoryReturnMax = input.ReadUInt32();
                break;
              }
              case 40: {
                HistoryReturnWindow = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// Preferences for the RangeTestModule
      /// </summary>
      public sealed partial class RangeTestConfig : pb::IMessage<RangeTestConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RangeTestConfig> _parser = new pb::MessageParser<RangeTestConfig>(() => new RangeTestConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RangeTestConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RangeTestConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RangeTestConfig(RangeTestConfig other) : this() {
          enabled_ = other.enabled_;
          sender_ = other.sender_;
          save_ = other.save_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RangeTestConfig Clone() {
          return new RangeTestConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        ///
        /// Enable the Range Test Module
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "sender" field.</summary>
        public const int SenderFieldNumber = 2;
        private uint sender_;
        /// <summary>
        ///
        /// Send out range test messages from this node
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Sender {
          get { return sender_; }
          set {
            sender_ = value;
          }
        }

        /// <summary>Field number for the "save" field.</summary>
        public const int SaveFieldNumber = 3;
        private bool save_;
        /// <summary>
        ///
        /// Bool value indicating that this node should save a RangeTest.csv file.
        /// ESP32 Only
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Save {
          get { return save_; }
          set {
            save_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RangeTestConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RangeTestConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          if (Sender != other.Sender) return false;
          if (Save != other.Save) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (Sender != 0) hash ^= Sender.GetHashCode();
          if (Save != false) hash ^= Save.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Sender != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Sender);
          }
          if (Save != false) {
            output.WriteRawTag(24);
            output.WriteBool(Save);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (Sender != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Sender);
          }
          if (Save != false) {
            output.WriteRawTag(24);
            output.WriteBool(Save);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (Sender != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sender);
          }
          if (Save != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RangeTestConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.Sender != 0) {
            Sender = other.Sender;
          }
          if (other.Save != false) {
            Save = other.Save;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                Sender = input.ReadUInt32();
                break;
              }
              case 24: {
                Save = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
              case 16: {
                Sender = input.ReadUInt32();
                break;
              }
              case 24: {
                Save = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// Configuration for both device and environment metrics
      /// </summary>
      public sealed partial class TelemetryConfig : pb::IMessage<TelemetryConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TelemetryConfig> _parser = new pb::MessageParser<TelemetryConfig>(() => new TelemetryConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TelemetryConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TelemetryConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TelemetryConfig(TelemetryConfig other) : this() {
          deviceUpdateInterval_ = other.deviceUpdateInterval_;
          environmentUpdateInterval_ = other.environmentUpdateInterval_;
          environmentMeasurementEnabled_ = other.environmentMeasurementEnabled_;
          environmentScreenEnabled_ = other.environmentScreenEnabled_;
          environmentDisplayFahrenheit_ = other.environmentDisplayFahrenheit_;
          airQualityEnabled_ = other.airQualityEnabled_;
          airQualityInterval_ = other.airQualityInterval_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TelemetryConfig Clone() {
          return new TelemetryConfig(this);
        }

        /// <summary>Field number for the "device_update_interval" field.</summary>
        public const int DeviceUpdateIntervalFieldNumber = 1;
        private uint deviceUpdateInterval_;
        /// <summary>
        ///
        /// Interval in seconds of how often we should try to send our
        /// device metrics to the mesh
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint DeviceUpdateInterval {
          get { return deviceUpdateInterval_; }
          set {
            deviceUpdateInterval_ = value;
          }
        }

        /// <summary>Field number for the "environment_update_interval" field.</summary>
        public const int EnvironmentUpdateIntervalFieldNumber = 2;
        private uint environmentUpdateInterval_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint EnvironmentUpdateInterval {
          get { return environmentUpdateInterval_; }
          set {
            environmentUpdateInterval_ = value;
          }
        }

        /// <summary>Field number for the "environment_measurement_enabled" field.</summary>
        public const int EnvironmentMeasurementEnabledFieldNumber = 3;
        private bool environmentMeasurementEnabled_;
        /// <summary>
        ///
        /// Preferences for the Telemetry Module (Environment)
        /// Enable/Disable the telemetry measurement module measurement collection
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool EnvironmentMeasurementEnabled {
          get { return environmentMeasurementEnabled_; }
          set {
            environmentMeasurementEnabled_ = value;
          }
        }

        /// <summary>Field number for the "environment_screen_enabled" field.</summary>
        public const int EnvironmentScreenEnabledFieldNumber = 4;
        private bool environmentScreenEnabled_;
        /// <summary>
        ///
        /// Enable/Disable the telemetry measurement module on-device display
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool EnvironmentScreenEnabled {
          get { return environmentScreenEnabled_; }
          set {
            environmentScreenEnabled_ = value;
          }
        }

        /// <summary>Field number for the "environment_display_fahrenheit" field.</summary>
        public const int EnvironmentDisplayFahrenheitFieldNumber = 5;
        private bool environmentDisplayFahrenheit_;
        /// <summary>
        ///
        /// We'll always read the sensor in Celsius, but sometimes we might want to
        /// display the results in Fahrenheit as a "user preference".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool EnvironmentDisplayFahrenheit {
          get { return environmentDisplayFahrenheit_; }
          set {
            environmentDisplayFahrenheit_ = value;
          }
        }

        /// <summary>Field number for the "air_quality_enabled" field.</summary>
        public const int AirQualityEnabledFieldNumber = 6;
        private bool airQualityEnabled_;
        /// <summary>
        ///
        /// Enable/Disable the air quality metrics
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AirQualityEnabled {
          get { return airQualityEnabled_; }
          set {
            airQualityEnabled_ = value;
          }
        }

        /// <summary>Field number for the "air_quality_interval" field.</summary>
        public const int AirQualityIntervalFieldNumber = 7;
        private uint airQualityInterval_;
        /// <summary>
        ///
        /// Interval in seconds of how often we should try to send our
        /// air quality metrics to the mesh
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint AirQualityInterval {
          get { return airQualityInterval_; }
          set {
            airQualityInterval_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TelemetryConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TelemetryConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceUpdateInterval != other.DeviceUpdateInterval) return false;
          if (EnvironmentUpdateInterval != other.EnvironmentUpdateInterval) return false;
          if (EnvironmentMeasurementEnabled != other.EnvironmentMeasurementEnabled) return false;
          if (EnvironmentScreenEnabled != other.EnvironmentScreenEnabled) return false;
          if (EnvironmentDisplayFahrenheit != other.EnvironmentDisplayFahrenheit) return false;
          if (AirQualityEnabled != other.AirQualityEnabled) return false;
          if (AirQualityInterval != other.AirQualityInterval) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceUpdateInterval != 0) hash ^= DeviceUpdateInterval.GetHashCode();
          if (EnvironmentUpdateInterval != 0) hash ^= EnvironmentUpdateInterval.GetHashCode();
          if (EnvironmentMeasurementEnabled != false) hash ^= EnvironmentMeasurementEnabled.GetHashCode();
          if (EnvironmentScreenEnabled != false) hash ^= EnvironmentScreenEnabled.GetHashCode();
          if (EnvironmentDisplayFahrenheit != false) hash ^= EnvironmentDisplayFahrenheit.GetHashCode();
          if (AirQualityEnabled != false) hash ^= AirQualityEnabled.GetHashCode();
          if (AirQualityInterval != 0) hash ^= AirQualityInterval.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DeviceUpdateInterval != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(DeviceUpdateInterval);
          }
          if (EnvironmentUpdateInterval != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(EnvironmentUpdateInterval);
          }
          if (EnvironmentMeasurementEnabled != false) {
            output.WriteRawTag(24);
            output.WriteBool(EnvironmentMeasurementEnabled);
          }
          if (EnvironmentScreenEnabled != false) {
            output.WriteRawTag(32);
            output.WriteBool(EnvironmentScreenEnabled);
          }
          if (EnvironmentDisplayFahrenheit != false) {
            output.WriteRawTag(40);
            output.WriteBool(EnvironmentDisplayFahrenheit);
          }
          if (AirQualityEnabled != false) {
            output.WriteRawTag(48);
            output.WriteBool(AirQualityEnabled);
          }
          if (AirQualityInterval != 0) {
            output.WriteRawTag(56);
            output.WriteUInt32(AirQualityInterval);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DeviceUpdateInterval != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(DeviceUpdateInterval);
          }
          if (EnvironmentUpdateInterval != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(EnvironmentUpdateInterval);
          }
          if (EnvironmentMeasurementEnabled != false) {
            output.WriteRawTag(24);
            output.WriteBool(EnvironmentMeasurementEnabled);
          }
          if (EnvironmentScreenEnabled != false) {
            output.WriteRawTag(32);
            output.WriteBool(EnvironmentScreenEnabled);
          }
          if (EnvironmentDisplayFahrenheit != false) {
            output.WriteRawTag(40);
            output.WriteBool(EnvironmentDisplayFahrenheit);
          }
          if (AirQualityEnabled != false) {
            output.WriteRawTag(48);
            output.WriteBool(AirQualityEnabled);
          }
          if (AirQualityInterval != 0) {
            output.WriteRawTag(56);
            output.WriteUInt32(AirQualityInterval);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (DeviceUpdateInterval != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceUpdateInterval);
          }
          if (EnvironmentUpdateInterval != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnvironmentUpdateInterval);
          }
          if (EnvironmentMeasurementEnabled != false) {
            size += 1 + 1;
          }
          if (EnvironmentScreenEnabled != false) {
            size += 1 + 1;
          }
          if (EnvironmentDisplayFahrenheit != false) {
            size += 1 + 1;
          }
          if (AirQualityEnabled != false) {
            size += 1 + 1;
          }
          if (AirQualityInterval != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AirQualityInterval);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TelemetryConfig other) {
          if (other == null) {
            return;
          }
          if (other.DeviceUpdateInterval != 0) {
            DeviceUpdateInterval = other.DeviceUpdateInterval;
          }
          if (other.EnvironmentUpdateInterval != 0) {
            EnvironmentUpdateInterval = other.EnvironmentUpdateInterval;
          }
          if (other.EnvironmentMeasurementEnabled != false) {
            EnvironmentMeasurementEnabled = other.EnvironmentMeasurementEnabled;
          }
          if (other.EnvironmentScreenEnabled != false) {
            EnvironmentScreenEnabled = other.EnvironmentScreenEnabled;
          }
          if (other.EnvironmentDisplayFahrenheit != false) {
            EnvironmentDisplayFahrenheit = other.EnvironmentDisplayFahrenheit;
          }
          if (other.AirQualityEnabled != false) {
            AirQualityEnabled = other.AirQualityEnabled;
          }
          if (other.AirQualityInterval != 0) {
            AirQualityInterval = other.AirQualityInterval;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DeviceUpdateInterval = input.ReadUInt32();
                break;
              }
              case 16: {
                EnvironmentUpdateInterval = input.ReadUInt32();
                break;
              }
              case 24: {
                EnvironmentMeasurementEnabled = input.ReadBool();
                break;
              }
              case 32: {
                EnvironmentScreenEnabled = input.ReadBool();
                break;
              }
              case 40: {
                EnvironmentDisplayFahrenheit = input.ReadBool();
                break;
              }
              case 48: {
                AirQualityEnabled = input.ReadBool();
                break;
              }
              case 56: {
                AirQualityInterval = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                DeviceUpdateInterval = input.ReadUInt32();
                break;
              }
              case 16: {
                EnvironmentUpdateInterval = input.ReadUInt32();
                break;
              }
              case 24: {
                EnvironmentMeasurementEnabled = input.ReadBool();
                break;
              }
              case 32: {
                EnvironmentScreenEnabled = input.ReadBool();
                break;
              }
              case 40: {
                EnvironmentDisplayFahrenheit = input.ReadBool();
                break;
              }
              case 48: {
                AirQualityEnabled = input.ReadBool();
                break;
              }
              case 56: {
                AirQualityInterval = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// TODO: REPLACE
      /// </summary>
      public sealed partial class CannedMessageConfig : pb::IMessage<CannedMessageConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CannedMessageConfig> _parser = new pb::MessageParser<CannedMessageConfig>(() => new CannedMessageConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<CannedMessageConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CannedMessageConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CannedMessageConfig(CannedMessageConfig other) : this() {
          rotary1Enabled_ = other.rotary1Enabled_;
          inputbrokerPinA_ = other.inputbrokerPinA_;
          inputbrokerPinB_ = other.inputbrokerPinB_;
          inputbrokerPinPress_ = other.inputbrokerPinPress_;
          inputbrokerEventCw_ = other.inputbrokerEventCw_;
          inputbrokerEventCcw_ = other.inputbrokerEventCcw_;
          inputbrokerEventPress_ = other.inputbrokerEventPress_;
          updown1Enabled_ = other.updown1Enabled_;
          enabled_ = other.enabled_;
          allowInputSource_ = other.allowInputSource_;
          sendBell_ = other.sendBell_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CannedMessageConfig Clone() {
          return new CannedMessageConfig(this);
        }

        /// <summary>Field number for the "rotary1_enabled" field.</summary>
        public const int Rotary1EnabledFieldNumber = 1;
        private bool rotary1Enabled_;
        /// <summary>
        ///
        /// Enable the rotary encoder #1. This is a 'dumb' encoder sending pulses on both A and B pins while rotating.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Rotary1Enabled {
          get { return rotary1Enabled_; }
          set {
            rotary1Enabled_ = value;
          }
        }

        /// <summary>Field number for the "inputbroker_pin_a" field.</summary>
        public const int InputbrokerPinAFieldNumber = 2;
        private uint inputbrokerPinA_;
        /// <summary>
        ///
        /// GPIO pin for rotary encoder A port.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint InputbrokerPinA {
          get { return inputbrokerPinA_; }
          set {
            inputbrokerPinA_ = value;
          }
        }

        /// <summary>Field number for the "inputbroker_pin_b" field.</summary>
        public const int InputbrokerPinBFieldNumber = 3;
        private uint inputbrokerPinB_;
        /// <summary>
        ///
        /// GPIO pin for rotary encoder B port.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint InputbrokerPinB {
          get { return inputbrokerPinB_; }
          set {
            inputbrokerPinB_ = value;
          }
        }

        /// <summary>Field number for the "inputbroker_pin_press" field.</summary>
        public const int InputbrokerPinPressFieldNumber = 4;
        private uint inputbrokerPinPress_;
        /// <summary>
        ///
        /// GPIO pin for rotary encoder Press port.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint InputbrokerPinPress {
          get { return inputbrokerPinPress_; }
          set {
            inputbrokerPinPress_ = value;
          }
        }

        /// <summary>Field number for the "inputbroker_event_cw" field.</summary>
        public const int InputbrokerEventCwFieldNumber = 5;
        private global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar inputbrokerEventCw_ = global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None;
        /// <summary>
        ///
        /// Generate input event on CW of this kind.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar InputbrokerEventCw {
          get { return inputbrokerEventCw_; }
          set {
            inputbrokerEventCw_ = value;
          }
        }

        /// <summary>Field number for the "inputbroker_event_ccw" field.</summary>
        public const int InputbrokerEventCcwFieldNumber = 6;
        private global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar inputbrokerEventCcw_ = global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None;
        /// <summary>
        ///
        /// Generate input event on CCW of this kind.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar InputbrokerEventCcw {
          get { return inputbrokerEventCcw_; }
          set {
            inputbrokerEventCcw_ = value;
          }
        }

        /// <summary>Field number for the "inputbroker_event_press" field.</summary>
        public const int InputbrokerEventPressFieldNumber = 7;
        private global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar inputbrokerEventPress_ = global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None;
        /// <summary>
        ///
        /// Generate input event on Press of this kind.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar InputbrokerEventPress {
          get { return inputbrokerEventPress_; }
          set {
            inputbrokerEventPress_ = value;
          }
        }

        /// <summary>Field number for the "updown1_enabled" field.</summary>
        public const int Updown1EnabledFieldNumber = 8;
        private bool updown1Enabled_;
        /// <summary>
        ///
        /// Enable the Up/Down/Select input device. Can be RAK rotary encoder or 3 buttons. Uses the a/b/press definitions from inputbroker.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Updown1Enabled {
          get { return updown1Enabled_; }
          set {
            updown1Enabled_ = value;
          }
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 9;
        private bool enabled_;
        /// <summary>
        ///
        /// Enable/disable CannedMessageModule.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "allow_input_source" field.</summary>
        public const int AllowInputSourceFieldNumber = 10;
        private string allowInputSource_ = "";
        /// <summary>
        ///
        /// Input event origin accepted by the canned message module.
        /// Can be e.g. "rotEnc1", "upDownEnc1" or keyword "_any"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AllowInputSource {
          get { return allowInputSource_; }
          set {
            allowInputSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "send_bell" field.</summary>
        public const int SendBellFieldNumber = 11;
        private bool sendBell_;
        /// <summary>
        ///
        /// CannedMessageModule also sends a bell character with the messages.
        /// ExternalNotificationModule can benefit from this feature.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SendBell {
          get { return sendBell_; }
          set {
            sendBell_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as CannedMessageConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(CannedMessageConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Rotary1Enabled != other.Rotary1Enabled) return false;
          if (InputbrokerPinA != other.InputbrokerPinA) return false;
          if (InputbrokerPinB != other.InputbrokerPinB) return false;
          if (InputbrokerPinPress != other.InputbrokerPinPress) return false;
          if (InputbrokerEventCw != other.InputbrokerEventCw) return false;
          if (InputbrokerEventCcw != other.InputbrokerEventCcw) return false;
          if (InputbrokerEventPress != other.InputbrokerEventPress) return false;
          if (Updown1Enabled != other.Updown1Enabled) return false;
          if (Enabled != other.Enabled) return false;
          if (AllowInputSource != other.AllowInputSource) return false;
          if (SendBell != other.SendBell) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Rotary1Enabled != false) hash ^= Rotary1Enabled.GetHashCode();
          if (InputbrokerPinA != 0) hash ^= InputbrokerPinA.GetHashCode();
          if (InputbrokerPinB != 0) hash ^= InputbrokerPinB.GetHashCode();
          if (InputbrokerPinPress != 0) hash ^= InputbrokerPinPress.GetHashCode();
          if (InputbrokerEventCw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) hash ^= InputbrokerEventCw.GetHashCode();
          if (InputbrokerEventCcw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) hash ^= InputbrokerEventCcw.GetHashCode();
          if (InputbrokerEventPress != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) hash ^= InputbrokerEventPress.GetHashCode();
          if (Updown1Enabled != false) hash ^= Updown1Enabled.GetHashCode();
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (AllowInputSource.Length != 0) hash ^= AllowInputSource.GetHashCode();
          if (SendBell != false) hash ^= SendBell.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Rotary1Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Rotary1Enabled);
          }
          if (InputbrokerPinA != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(InputbrokerPinA);
          }
          if (InputbrokerPinB != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(InputbrokerPinB);
          }
          if (InputbrokerPinPress != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(InputbrokerPinPress);
          }
          if (InputbrokerEventCw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            output.WriteRawTag(40);
            output.WriteEnum((int) InputbrokerEventCw);
          }
          if (InputbrokerEventCcw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            output.WriteRawTag(48);
            output.WriteEnum((int) InputbrokerEventCcw);
          }
          if (InputbrokerEventPress != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            output.WriteRawTag(56);
            output.WriteEnum((int) InputbrokerEventPress);
          }
          if (Updown1Enabled != false) {
            output.WriteRawTag(64);
            output.WriteBool(Updown1Enabled);
          }
          if (Enabled != false) {
            output.WriteRawTag(72);
            output.WriteBool(Enabled);
          }
          if (AllowInputSource.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(AllowInputSource);
          }
          if (SendBell != false) {
            output.WriteRawTag(88);
            output.WriteBool(SendBell);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Rotary1Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Rotary1Enabled);
          }
          if (InputbrokerPinA != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(InputbrokerPinA);
          }
          if (InputbrokerPinB != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(InputbrokerPinB);
          }
          if (InputbrokerPinPress != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(InputbrokerPinPress);
          }
          if (InputbrokerEventCw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            output.WriteRawTag(40);
            output.WriteEnum((int) InputbrokerEventCw);
          }
          if (InputbrokerEventCcw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            output.WriteRawTag(48);
            output.WriteEnum((int) InputbrokerEventCcw);
          }
          if (InputbrokerEventPress != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            output.WriteRawTag(56);
            output.WriteEnum((int) InputbrokerEventPress);
          }
          if (Updown1Enabled != false) {
            output.WriteRawTag(64);
            output.WriteBool(Updown1Enabled);
          }
          if (Enabled != false) {
            output.WriteRawTag(72);
            output.WriteBool(Enabled);
          }
          if (AllowInputSource.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(AllowInputSource);
          }
          if (SendBell != false) {
            output.WriteRawTag(88);
            output.WriteBool(SendBell);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Rotary1Enabled != false) {
            size += 1 + 1;
          }
          if (InputbrokerPinA != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputbrokerPinA);
          }
          if (InputbrokerPinB != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputbrokerPinB);
          }
          if (InputbrokerPinPress != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputbrokerPinPress);
          }
          if (InputbrokerEventCw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InputbrokerEventCw);
          }
          if (InputbrokerEventCcw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InputbrokerEventCcw);
          }
          if (InputbrokerEventPress != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InputbrokerEventPress);
          }
          if (Updown1Enabled != false) {
            size += 1 + 1;
          }
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (AllowInputSource.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AllowInputSource);
          }
          if (SendBell != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(CannedMessageConfig other) {
          if (other == null) {
            return;
          }
          if (other.Rotary1Enabled != false) {
            Rotary1Enabled = other.Rotary1Enabled;
          }
          if (other.InputbrokerPinA != 0) {
            InputbrokerPinA = other.InputbrokerPinA;
          }
          if (other.InputbrokerPinB != 0) {
            InputbrokerPinB = other.InputbrokerPinB;
          }
          if (other.InputbrokerPinPress != 0) {
            InputbrokerPinPress = other.InputbrokerPinPress;
          }
          if (other.InputbrokerEventCw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            InputbrokerEventCw = other.InputbrokerEventCw;
          }
          if (other.InputbrokerEventCcw != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            InputbrokerEventCcw = other.InputbrokerEventCcw;
          }
          if (other.InputbrokerEventPress != global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar.None) {
            InputbrokerEventPress = other.InputbrokerEventPress;
          }
          if (other.Updown1Enabled != false) {
            Updown1Enabled = other.Updown1Enabled;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.AllowInputSource.Length != 0) {
            AllowInputSource = other.AllowInputSource;
          }
          if (other.SendBell != false) {
            SendBell = other.SendBell;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Rotary1Enabled = input.ReadBool();
                break;
              }
              case 16: {
                InputbrokerPinA = input.ReadUInt32();
                break;
              }
              case 24: {
                InputbrokerPinB = input.ReadUInt32();
                break;
              }
              case 32: {
                InputbrokerPinPress = input.ReadUInt32();
                break;
              }
              case 40: {
                InputbrokerEventCw = (global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar) input.ReadEnum();
                break;
              }
              case 48: {
                InputbrokerEventCcw = (global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar) input.ReadEnum();
                break;
              }
              case 56: {
                InputbrokerEventPress = (global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar) input.ReadEnum();
                break;
              }
              case 64: {
                Updown1Enabled = input.ReadBool();
                break;
              }
              case 72: {
                Enabled = input.ReadBool();
                break;
              }
              case 82: {
                AllowInputSource = input.ReadString();
                break;
              }
              case 88: {
                SendBell = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Rotary1Enabled = input.ReadBool();
                break;
              }
              case 16: {
                InputbrokerPinA = input.ReadUInt32();
                break;
              }
              case 24: {
                InputbrokerPinB = input.ReadUInt32();
                break;
              }
              case 32: {
                InputbrokerPinPress = input.ReadUInt32();
                break;
              }
              case 40: {
                InputbrokerEventCw = (global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar) input.ReadEnum();
                break;
              }
              case 48: {
                InputbrokerEventCcw = (global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar) input.ReadEnum();
                break;
              }
              case 56: {
                InputbrokerEventPress = (global::Meshtastic.Protobufs.ModuleConfig.Types.CannedMessageConfig.Types.InputEventChar) input.ReadEnum();
                break;
              }
              case 64: {
                Updown1Enabled = input.ReadBool();
                break;
              }
              case 72: {
                Enabled = input.ReadBool();
                break;
              }
              case 82: {
                AllowInputSource = input.ReadString();
                break;
              }
              case 88: {
                SendBell = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the CannedMessageConfig message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          ///
          /// TODO: REPLACE
          /// </summary>
          public enum InputEventChar {
            /// <summary>
            ///
            /// TODO: REPLACE
            /// </summary>
            [pbr::OriginalName("NONE")] None = 0,
            /// <summary>
            ///
            /// TODO: REPLACE
            /// </summary>
            [pbr::OriginalName("UP")] Up = 17,
            /// <summary>
            ///
            /// TODO: REPLACE
            /// </summary>
            [pbr::OriginalName("DOWN")] Down = 18,
            /// <summary>
            ///
            /// TODO: REPLACE
            /// </summary>
            [pbr::OriginalName("LEFT")] Left = 19,
            /// <summary>
            ///
            /// TODO: REPLACE
            /// </summary>
            [pbr::OriginalName("RIGHT")] Right = 20,
            /// <summary>
            ///
            /// '\n'
            /// </summary>
            [pbr::OriginalName("SELECT")] Select = 10,
            /// <summary>
            ///
            /// TODO: REPLACE
            /// </summary>
            [pbr::OriginalName("BACK")] Back = 27,
            /// <summary>
            ///
            /// TODO: REPLACE
            /// </summary>
            [pbr::OriginalName("CANCEL")] Cancel = 24,
          }

        }
        #endregion

      }

      /// <summary>
      ///Ambient Lighting Module - Settings for control of onboard LEDs to allow users to adjust the brightness levels and respective color levels.
      ///Initially created for the RAK14001 RGB LED module.
      /// </summary>
      public sealed partial class AmbientLightingConfig : pb::IMessage<AmbientLightingConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AmbientLightingConfig> _parser = new pb::MessageParser<AmbientLightingConfig>(() => new AmbientLightingConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AmbientLightingConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Meshtastic.Protobufs.ModuleConfig.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AmbientLightingConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AmbientLightingConfig(AmbientLightingConfig other) : this() {
          ledState_ = other.ledState_;
          current_ = other.current_;
          red_ = other.red_;
          green_ = other.green_;
          blue_ = other.blue_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AmbientLightingConfig Clone() {
          return new AmbientLightingConfig(this);
        }

        /// <summary>Field number for the "led_state" field.</summary>
        public const int LedStateFieldNumber = 1;
        private bool ledState_;
        /// <summary>
        ///Sets LED to on or off.  
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool LedState {
          get { return ledState_; }
          set {
            ledState_ = value;
          }
        }

        /// <summary>Field number for the "current" field.</summary>
        public const int CurrentFieldNumber = 2;
        private uint current_;
        /// <summary>
        ///Sets the overall current for the LED, firmware side range for the RAK14001 is 1-31, but users should be given a range of 0-100%  
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Current {
          get { return current_; }
          set {
            current_ = value;
          }
        }

        /// <summary>Field number for the "red" field.</summary>
        public const int RedFieldNumber = 3;
        private uint red_;
        /// <summary>
        /// Red level
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Red {
          get { return red_; }
          set {
            red_ = value;
          }
        }

        /// <summary>Field number for the "green" field.</summary>
        public const int GreenFieldNumber = 4;
        private uint green_;
        /// <summary>
        ///Sets the green level of the LED, firmware side values are 0-255, but users should be given a range of 0-100%   
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Green {
          get { return green_; }
          set {
            green_ = value;
          }
        }

        /// <summary>Field number for the "blue" field.</summary>
        public const int BlueFieldNumber = 5;
        private uint blue_;
        /// <summary>
        ///Sets the blue level of the LED, firmware side values are 0-255, but users should be given a range of 0-100%   
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Blue {
          get { return blue_; }
          set {
            blue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AmbientLightingConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AmbientLightingConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LedState != other.LedState) return false;
          if (Current != other.Current) return false;
          if (Red != other.Red) return false;
          if (Green != other.Green) return false;
          if (Blue != other.Blue) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (LedState != false) hash ^= LedState.GetHashCode();
          if (Current != 0) hash ^= Current.GetHashCode();
          if (Red != 0) hash ^= Red.GetHashCode();
          if (Green != 0) hash ^= Green.GetHashCode();
          if (Blue != 0) hash ^= Blue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LedState != false) {
            output.WriteRawTag(8);
            output.WriteBool(LedState);
          }
          if (Current != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Current);
          }
          if (Red != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Red);
          }
          if (Green != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Green);
          }
          if (Blue != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Blue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LedState != false) {
            output.WriteRawTag(8);
            output.WriteBool(LedState);
          }
          if (Current != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Current);
          }
          if (Red != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Red);
          }
          if (Green != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Green);
          }
          if (Blue != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Blue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (LedState != false) {
            size += 1 + 1;
          }
          if (Current != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Current);
          }
          if (Red != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Red);
          }
          if (Green != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Green);
          }
          if (Blue != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Blue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AmbientLightingConfig other) {
          if (other == null) {
            return;
          }
          if (other.LedState != false) {
            LedState = other.LedState;
          }
          if (other.Current != 0) {
            Current = other.Current;
          }
          if (other.Red != 0) {
            Red = other.Red;
          }
          if (other.Green != 0) {
            Green = other.Green;
          }
          if (other.Blue != 0) {
            Blue = other.Blue;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                LedState = input.ReadBool();
                break;
              }
              case 16: {
                Current = input.ReadUInt32();
                break;
              }
              case 24: {
                Red = input.ReadUInt32();
                break;
              }
              case 32: {
                Green = input.ReadUInt32();
                break;
              }
              case 40: {
                Blue = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                LedState = input.ReadBool();
                break;
              }
              case 16: {
                Current = input.ReadUInt32();
                break;
              }
              case 24: {
                Red = input.ReadUInt32();
                break;
              }
              case 32: {
                Green = input.ReadUInt32();
                break;
              }
              case 40: {
                Blue = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///
  /// A GPIO pin definition for remote hardware module
  /// </summary>
  public sealed partial class RemoteHardwarePin : pb::IMessage<RemoteHardwarePin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoteHardwarePin> _parser = new pb::MessageParser<RemoteHardwarePin>(() => new RemoteHardwarePin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RemoteHardwarePin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.ModuleConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoteHardwarePin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoteHardwarePin(RemoteHardwarePin other) : this() {
      gpioPin_ = other.gpioPin_;
      name_ = other.name_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemoteHardwarePin Clone() {
      return new RemoteHardwarePin(this);
    }

    /// <summary>Field number for the "gpio_pin" field.</summary>
    public const int GpioPinFieldNumber = 1;
    private uint gpioPin_;
    /// <summary>
    ///
    /// GPIO Pin number (must match Arduino)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GpioPin {
      get { return gpioPin_; }
      set {
        gpioPin_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///
    /// Name for the GPIO pin (i.e. Front gate, mailbox, etc)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Meshtastic.Protobufs.RemoteHardwarePinType type_ = global::Meshtastic.Protobufs.RemoteHardwarePinType.Unknown;
    /// <summary>
    ///
    /// Type of GPIO access available to consumers on the mesh
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.RemoteHardwarePinType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RemoteHardwarePin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RemoteHardwarePin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GpioPin != other.GpioPin) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GpioPin != 0) hash ^= GpioPin.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Meshtastic.Protobufs.RemoteHardwarePinType.Unknown) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GpioPin != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GpioPin);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::Meshtastic.Protobufs.RemoteHardwarePinType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GpioPin != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GpioPin);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::Meshtastic.Protobufs.RemoteHardwarePinType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GpioPin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GpioPin);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Meshtastic.Protobufs.RemoteHardwarePinType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RemoteHardwarePin other) {
      if (other == null) {
        return;
      }
      if (other.GpioPin != 0) {
        GpioPin = other.GpioPin;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Meshtastic.Protobufs.RemoteHardwarePinType.Unknown) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GpioPin = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Meshtastic.Protobufs.RemoteHardwarePinType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GpioPin = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Meshtastic.Protobufs.RemoteHardwarePinType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
